ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC1_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC1_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_ADC1_Init:
  24              	.LFB66:
  25              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * File Name          : ADC.c
   4:Core/Src/adc.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/adc.c ****   *                      of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * This notice applies to any and all portions of this file
   8:Core/Src/adc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/adc.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/adc.c ****   * inserted by the user or by software development tools
  11:Core/Src/adc.c ****   * are owned by their respective copyright owners.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Core/Src/adc.c ****   * All rights reserved.
  15:Core/Src/adc.c ****   *
  16:Core/Src/adc.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Core/Src/adc.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Core/Src/adc.c ****   *
  19:Core/Src/adc.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Core/Src/adc.c ****   *    this list of conditions and the following disclaimer.
  21:Core/Src/adc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Core/Src/adc.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Core/Src/adc.c ****   *    and/or other materials provided with the distribution.
  24:Core/Src/adc.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Core/Src/adc.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Core/Src/adc.c ****   *    derived from this software without specific written permission.
  27:Core/Src/adc.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Core/Src/adc.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Core/Src/adc.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Core/Src/adc.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Core/Src/adc.c ****   *    this license is void and will automatically terminate your rights under 
  32:Core/Src/adc.c ****   *    this license. 
  33:Core/Src/adc.c ****   *
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccWlBtXP.s 			page 2
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 2


  34:Core/Src/adc.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Core/Src/adc.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Core/Src/adc.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Core/Src/adc.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Core/Src/adc.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Core/Src/adc.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Core/Src/adc.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Core/Src/adc.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Core/Src/adc.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Core/Src/adc.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Core/Src/adc.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Core/Src/adc.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Core/Src/adc.c ****   *
  47:Core/Src/adc.c ****   ******************************************************************************
  48:Core/Src/adc.c ****   */
  49:Core/Src/adc.c **** 
  50:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  51:Core/Src/adc.c **** #include "adc.h"
  52:Core/Src/adc.c **** 
  53:Core/Src/adc.c **** #include "gpio.h"
  54:Core/Src/adc.c **** #include "dma.h"
  55:Core/Src/adc.c **** 
  56:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/adc.c **** 
  58:Core/Src/adc.c **** /* USER CODE END 0 */
  59:Core/Src/adc.c **** 
  60:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  61:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  62:Core/Src/adc.c **** 
  63:Core/Src/adc.c **** /* ADC1 init function */
  64:Core/Src/adc.c **** void MX_ADC1_Init(void)
  65:Core/Src/adc.c **** {
  26              		.loc 1 65 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 85B0     		sub	sp, sp, #20
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  66:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig;
  67:Core/Src/adc.c **** 
  68:Core/Src/adc.c ****     /**Common config 
  69:Core/Src/adc.c ****     */
  70:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  37              		.loc 1 70 0
  38 0004 1B48     		ldr	r0, .L9
  39 0006 1C4B     		ldr	r3, .L9+4
  40 0008 0360     		str	r3, [r0]
  71:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  41              		.loc 1 71 0
  42 000a 4FF48073 		mov	r3, #256
  43 000e 8360     		str	r3, [r0, #8]
  72:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 3


  44              		.loc 1 72 0
  45 0010 0023     		movs	r3, #0
  46 0012 C360     		str	r3, [r0, #12]
  73:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  47              		.loc 1 73 0
  48 0014 4361     		str	r3, [r0, #20]
  74:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  49              		.loc 1 74 0
  50 0016 4FF46022 		mov	r2, #917504
  51 001a C261     		str	r2, [r0, #28]
  75:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  52              		.loc 1 75 0
  53 001c 4360     		str	r3, [r0, #4]
  76:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 2;
  54              		.loc 1 76 0
  55 001e 0223     		movs	r3, #2
  56 0020 0361     		str	r3, [r0, #16]
  77:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  57              		.loc 1 77 0
  58 0022 FFF7FEFF 		bl	HAL_ADC_Init
  59              	.LVL0:
  60 0026 B0B9     		cbnz	r0, .L6
  61              	.L2:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c ****     /**Configure Regular Channel 
  83:Core/Src/adc.c ****     */
  84:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_12;
  62              		.loc 1 84 0
  63 0028 0C23     		movs	r3, #12
  64 002a 0193     		str	r3, [sp, #4]
  85:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  65              		.loc 1 85 0
  66 002c 0123     		movs	r3, #1
  67 002e 0293     		str	r3, [sp, #8]
  86:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
  68              		.loc 1 86 0
  69 0030 0723     		movs	r3, #7
  70 0032 0393     		str	r3, [sp, #12]
  87:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  71              		.loc 1 87 0
  72 0034 01A9     		add	r1, sp, #4
  73 0036 0F48     		ldr	r0, .L9
  74 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  75              	.LVL1:
  76 003c 80B9     		cbnz	r0, .L7
  77              	.L3:
  88:Core/Src/adc.c ****   {
  89:Core/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
  90:Core/Src/adc.c ****   }
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****     /**Configure Regular Channel 
  93:Core/Src/adc.c ****     */
  94:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
  78              		.loc 1 94 0
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 4


  79 003e 1023     		movs	r3, #16
  80 0040 0193     		str	r3, [sp, #4]
  95:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
  81              		.loc 1 95 0
  82 0042 0223     		movs	r3, #2
  83 0044 0293     		str	r3, [sp, #8]
  96:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  84              		.loc 1 96 0
  85 0046 01A9     		add	r1, sp, #4
  86 0048 0A48     		ldr	r0, .L9
  87 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  88              	.LVL2:
  89 004e 60B9     		cbnz	r0, .L8
  90              	.L1:
  97:Core/Src/adc.c ****   {
  98:Core/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
  99:Core/Src/adc.c ****   }
 100:Core/Src/adc.c **** 
 101:Core/Src/adc.c **** }
  91              		.loc 1 101 0
  92 0050 05B0     		add	sp, sp, #20
  93              	.LCFI2:
  94              		.cfi_remember_state
  95              		.cfi_def_cfa_offset 4
  96              		@ sp needed
  97 0052 5DF804FB 		ldr	pc, [sp], #4
  98              	.L6:
  99              	.LCFI3:
 100              		.cfi_restore_state
  79:Core/Src/adc.c ****   }
 101              		.loc 1 79 0
 102 0056 4F21     		movs	r1, #79
 103 0058 0848     		ldr	r0, .L9+8
 104 005a FFF7FEFF 		bl	_Error_Handler
 105              	.LVL3:
 106 005e E3E7     		b	.L2
 107              	.L7:
  89:Core/Src/adc.c ****   }
 108              		.loc 1 89 0
 109 0060 5921     		movs	r1, #89
 110 0062 0648     		ldr	r0, .L9+8
 111 0064 FFF7FEFF 		bl	_Error_Handler
 112              	.LVL4:
 113 0068 E9E7     		b	.L3
 114              	.L8:
  98:Core/Src/adc.c ****   }
 115              		.loc 1 98 0
 116 006a 6221     		movs	r1, #98
 117 006c 0348     		ldr	r0, .L9+8
 118 006e FFF7FEFF 		bl	_Error_Handler
 119              	.LVL5:
 120              		.loc 1 101 0
 121 0072 EDE7     		b	.L1
 122              	.L10:
 123              		.align	2
 124              	.L9:
 125 0074 00000000 		.word	hadc1
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 5


 126 0078 00240140 		.word	1073816576
 127 007c 00000000 		.word	.LC0
 128              		.cfi_endproc
 129              	.LFE66:
 131              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 132              		.align	1
 133              		.global	HAL_ADC_MspInit
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	HAL_ADC_MspInit:
 140              	.LFB67:
 102:Core/Src/adc.c **** 
 103:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 104:Core/Src/adc.c **** {
 141              		.loc 1 104 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 24
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL6:
 105:Core/Src/adc.c **** 
 106:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 107:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 146              		.loc 1 107 0
 147 0000 0268     		ldr	r2, [r0]
 148 0002 1B4B     		ldr	r3, .L20
 149 0004 9A42     		cmp	r2, r3
 150 0006 00D0     		beq	.L18
 151 0008 7047     		bx	lr
 152              	.L18:
 104:Core/Src/adc.c **** 
 153              		.loc 1 104 0
 154 000a 10B5     		push	{r4, lr}
 155              	.LCFI4:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
 159 000c 86B0     		sub	sp, sp, #24
 160              	.LCFI5:
 161              		.cfi_def_cfa_offset 32
 162 000e 0446     		mov	r4, r0
 163              	.LBB2:
 108:Core/Src/adc.c ****   {
 109:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 110:Core/Src/adc.c **** 
 111:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 112:Core/Src/adc.c ****     /* ADC1 clock enable */
 113:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 164              		.loc 1 113 0
 165 0010 03F56C43 		add	r3, r3, #60416
 166 0014 9A69     		ldr	r2, [r3, #24]
 167 0016 42F40072 		orr	r2, r2, #512
 168 001a 9A61     		str	r2, [r3, #24]
 169 001c 9B69     		ldr	r3, [r3, #24]
 170 001e 03F40073 		and	r3, r3, #512
 171 0022 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 6


 172 0024 019B     		ldr	r3, [sp, #4]
 173              	.LBE2:
 114:Core/Src/adc.c ****   
 115:Core/Src/adc.c ****     /**ADC1 GPIO Configuration    
 116:Core/Src/adc.c ****     PC2     ------> ADC1_IN12 
 117:Core/Src/adc.c ****     */
 118:Core/Src/adc.c ****     GPIO_InitStruct.Pin = LightSensor_Pin;
 174              		.loc 1 118 0
 175 0026 0423     		movs	r3, #4
 176 0028 0293     		str	r3, [sp, #8]
 119:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 177              		.loc 1 119 0
 178 002a 0323     		movs	r3, #3
 179 002c 0393     		str	r3, [sp, #12]
 120:Core/Src/adc.c ****     HAL_GPIO_Init(LightSensor_GPIO_Port, &GPIO_InitStruct);
 180              		.loc 1 120 0
 181 002e 02A9     		add	r1, sp, #8
 182 0030 1048     		ldr	r0, .L20+4
 183              	.LVL7:
 184 0032 FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL8:
 121:Core/Src/adc.c **** 
 122:Core/Src/adc.c ****     /* ADC1 DMA Init */
 123:Core/Src/adc.c ****     /* ADC1 Init */
 124:Core/Src/adc.c ****     hdma_adc1.Instance = DMA1_Channel1;
 186              		.loc 1 124 0
 187 0036 1048     		ldr	r0, .L20+8
 188 0038 104B     		ldr	r3, .L20+12
 189 003a 0360     		str	r3, [r0]
 125:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 190              		.loc 1 125 0
 191 003c 0023     		movs	r3, #0
 192 003e 4360     		str	r3, [r0, #4]
 126:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 193              		.loc 1 126 0
 194 0040 8360     		str	r3, [r0, #8]
 127:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 195              		.loc 1 127 0
 196 0042 8022     		movs	r2, #128
 197 0044 C260     		str	r2, [r0, #12]
 128:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 198              		.loc 1 128 0
 199 0046 4FF40072 		mov	r2, #512
 200 004a 0261     		str	r2, [r0, #16]
 129:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 201              		.loc 1 129 0
 202 004c 4FF40062 		mov	r2, #2048
 203 0050 4261     		str	r2, [r0, #20]
 130:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 204              		.loc 1 130 0
 205 0052 8361     		str	r3, [r0, #24]
 131:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 206              		.loc 1 131 0
 207 0054 C361     		str	r3, [r0, #28]
 132:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 208              		.loc 1 132 0
 209 0056 FFF7FEFF 		bl	HAL_DMA_Init
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 7


 210              	.LVL9:
 211 005a 20B9     		cbnz	r0, .L19
 212              	.L13:
 133:Core/Src/adc.c ****     {
 134:Core/Src/adc.c ****       _Error_Handler(__FILE__, __LINE__);
 135:Core/Src/adc.c ****     }
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 213              		.loc 1 137 0
 214 005c 064B     		ldr	r3, .L20+8
 215 005e 2362     		str	r3, [r4, #32]
 216 0060 5C62     		str	r4, [r3, #36]
 138:Core/Src/adc.c **** 
 139:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 140:Core/Src/adc.c **** 
 141:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 142:Core/Src/adc.c ****   }
 143:Core/Src/adc.c **** }
 217              		.loc 1 143 0
 218 0062 06B0     		add	sp, sp, #24
 219              	.LCFI6:
 220              		.cfi_remember_state
 221              		.cfi_def_cfa_offset 8
 222              		@ sp needed
 223 0064 10BD     		pop	{r4, pc}
 224              	.LVL10:
 225              	.L19:
 226              	.LCFI7:
 227              		.cfi_restore_state
 134:Core/Src/adc.c ****     }
 228              		.loc 1 134 0
 229 0066 8621     		movs	r1, #134
 230 0068 0548     		ldr	r0, .L20+16
 231 006a FFF7FEFF 		bl	_Error_Handler
 232              	.LVL11:
 233 006e F5E7     		b	.L13
 234              	.L21:
 235              		.align	2
 236              	.L20:
 237 0070 00240140 		.word	1073816576
 238 0074 00100140 		.word	1073811456
 239 0078 00000000 		.word	hdma_adc1
 240 007c 08000240 		.word	1073872904
 241 0080 00000000 		.word	.LC0
 242              		.cfi_endproc
 243              	.LFE67:
 245              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 246              		.align	1
 247              		.global	HAL_ADC_MspDeInit
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 253              	HAL_ADC_MspDeInit:
 254              	.LFB68:
 144:Core/Src/adc.c **** 
 145:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 8


 146:Core/Src/adc.c **** {
 255              		.loc 1 146 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              	.LVL12:
 147:Core/Src/adc.c **** 
 148:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 260              		.loc 1 148 0
 261 0000 0268     		ldr	r2, [r0]
 262 0002 094B     		ldr	r3, .L29
 263 0004 9A42     		cmp	r2, r3
 264 0006 00D0     		beq	.L28
 265 0008 7047     		bx	lr
 266              	.L28:
 146:Core/Src/adc.c **** 
 267              		.loc 1 146 0
 268 000a 10B5     		push	{r4, lr}
 269              	.LCFI8:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 273 000c 0446     		mov	r4, r0
 149:Core/Src/adc.c ****   {
 150:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 151:Core/Src/adc.c **** 
 152:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 153:Core/Src/adc.c ****     /* Peripheral clock disable */
 154:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 274              		.loc 1 154 0
 275 000e 074A     		ldr	r2, .L29+4
 276 0010 9369     		ldr	r3, [r2, #24]
 277 0012 23F40073 		bic	r3, r3, #512
 278 0016 9361     		str	r3, [r2, #24]
 155:Core/Src/adc.c ****   
 156:Core/Src/adc.c ****     /**ADC1 GPIO Configuration    
 157:Core/Src/adc.c ****     PC2     ------> ADC1_IN12 
 158:Core/Src/adc.c ****     */
 159:Core/Src/adc.c ****     HAL_GPIO_DeInit(LightSensor_GPIO_Port, LightSensor_Pin);
 279              		.loc 1 159 0
 280 0018 0421     		movs	r1, #4
 281 001a 0548     		ldr	r0, .L29+8
 282              	.LVL13:
 283 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 284              	.LVL14:
 160:Core/Src/adc.c **** 
 161:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 162:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 285              		.loc 1 162 0
 286 0020 206A     		ldr	r0, [r4, #32]
 287 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 288              	.LVL15:
 163:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 164:Core/Src/adc.c **** 
 165:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 166:Core/Src/adc.c ****   }
 167:Core/Src/adc.c **** } 
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 9


 289              		.loc 1 167 0
 290 0026 10BD     		pop	{r4, pc}
 291              	.LVL16:
 292              	.L30:
 293              		.align	2
 294              	.L29:
 295 0028 00240140 		.word	1073816576
 296 002c 00100240 		.word	1073876992
 297 0030 00100140 		.word	1073811456
 298              		.cfi_endproc
 299              	.LFE68:
 301              		.comm	hdma_adc1,68,4
 302              		.comm	hadc1,48,4
 303              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 304              		.align	2
 305              	.LC0:
 306 0000 436F7265 		.ascii	"Core/Src/adc.c\000"
 306      2F537263 
 306      2F616463 
 306      2E6300
 307              		.text
 308              	.Letext0:
 309              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 310              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 311              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 312              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 313              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 314              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 315              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 316              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 317              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 318              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 319              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 320              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 321              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 322              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 323              		.file 16 "Core/Inc/adc.h"
 324              		.file 17 "Core/Inc/dma.h"
ARM GAS  C:\Users\bertz\AppData\Local\Temp\cclYfv94.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:16     .text.MX_ADC1_Init:00000000 $t
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:23     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:125    .text.MX_ADC1_Init:00000074 $d
                            *COM*:00000030 hadc1
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:132    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:139    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:237    .text.HAL_ADC_MspInit:00000070 $d
                            *COM*:00000044 hdma_adc1
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:246    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:253    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:295    .text.HAL_ADC_MspDeInit:00000028 $d
C:\Users\bertz\AppData\Local\Temp\cclYfv94.s:304    .rodata.MX_ADC1_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
