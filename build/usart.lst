ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART1_UART_Init:
  24              	.LFB66:
  25              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * File Name          : USART.c
   4:Core/Src/usart.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/usart.c ****   *                      of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * This notice applies to any and all portions of this file
   8:Core/Src/usart.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/usart.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/usart.c ****   * inserted by the user or by software development tools
  11:Core/Src/usart.c ****   * are owned by their respective copyright owners.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Core/Src/usart.c ****   * All rights reserved.
  15:Core/Src/usart.c ****   *
  16:Core/Src/usart.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Core/Src/usart.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Core/Src/usart.c ****   *
  19:Core/Src/usart.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Core/Src/usart.c ****   *    this list of conditions and the following disclaimer.
  21:Core/Src/usart.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Core/Src/usart.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Core/Src/usart.c ****   *    and/or other materials provided with the distribution.
  24:Core/Src/usart.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Core/Src/usart.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Core/Src/usart.c ****   *    derived from this software without specific written permission.
  27:Core/Src/usart.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Core/Src/usart.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Core/Src/usart.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Core/Src/usart.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Core/Src/usart.c ****   *    this license is void and will automatically terminate your rights under 
  32:Core/Src/usart.c ****   *    this license. 
  33:Core/Src/usart.c ****   *
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 2


  34:Core/Src/usart.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Core/Src/usart.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Core/Src/usart.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Core/Src/usart.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Core/Src/usart.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Core/Src/usart.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Core/Src/usart.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Core/Src/usart.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Core/Src/usart.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Core/Src/usart.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Core/Src/usart.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Core/Src/usart.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Core/Src/usart.c ****   *
  47:Core/Src/usart.c ****   ******************************************************************************
  48:Core/Src/usart.c ****   */
  49:Core/Src/usart.c **** 
  50:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  51:Core/Src/usart.c **** #include "usart.h"
  52:Core/Src/usart.c **** 
  53:Core/Src/usart.c **** #include "gpio.h"
  54:Core/Src/usart.c **** #include "dma.h"
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c **** /* USER CODE END 0 */
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  61:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  62:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  63:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_rx;
  64:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_rx;
  65:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  66:Core/Src/usart.c **** 
  67:Core/Src/usart.c **** /* USART1 init function */
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  70:Core/Src/usart.c **** {
  26              		.loc 1 70 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****   huart1.Instance = USART1;
  35              		.loc 1 72 0
  36 0002 0B48     		ldr	r0, .L5
  37 0004 0B4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  73:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  39              		.loc 1 73 0
  40 0008 4FF4E133 		mov	r3, #115200
  41 000c 4360     		str	r3, [r0, #4]
  74:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 3


  42              		.loc 1 74 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  75:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 75 0
  46 0012 C360     		str	r3, [r0, #12]
  76:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 76 0
  48 0014 0361     		str	r3, [r0, #16]
  77:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 77 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  78:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  52              		.loc 1 78 0
  53 001a 8361     		str	r3, [r0, #24]
  79:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 79 0
  55 001c C361     		str	r3, [r0, #28]
  80:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  56              		.loc 1 80 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  81:Core/Src/usart.c ****   {
  82:Core/Src/usart.c ****     _Error_Handler(__FILE__, __LINE__);
  83:Core/Src/usart.c ****   }
  84:Core/Src/usart.c **** 
  85:Core/Src/usart.c **** }
  61              		.loc 1 85 0
  62 0024 08BD     		pop	{r3, pc}
  63              	.L4:
  82:Core/Src/usart.c ****   }
  64              		.loc 1 82 0
  65 0026 5221     		movs	r1, #82
  66 0028 0348     		ldr	r0, .L5+8
  67 002a FFF7FEFF 		bl	_Error_Handler
  68              	.LVL1:
  69              		.loc 1 85 0
  70 002e F9E7     		b	.L1
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 0030 00000000 		.word	huart1
  75 0034 00380140 		.word	1073821696
  76 0038 00000000 		.word	.LC0
  77              		.cfi_endproc
  78              	.LFE66:
  80              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  81              		.align	1
  82              		.global	MX_USART2_UART_Init
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	MX_USART2_UART_Init:
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 4


  89              	.LFB67:
  86:Core/Src/usart.c **** /* USART2 init function */
  87:Core/Src/usart.c **** 
  88:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  89:Core/Src/usart.c **** {
  90              		.loc 1 89 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0000 08B5     		push	{r3, lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 3, -8
  98              		.cfi_offset 14, -4
  90:Core/Src/usart.c **** 
  91:Core/Src/usart.c ****   huart2.Instance = USART2;
  99              		.loc 1 91 0
 100 0002 0B48     		ldr	r0, .L11
 101 0004 0B4B     		ldr	r3, .L11+4
 102 0006 0360     		str	r3, [r0]
  92:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
 103              		.loc 1 92 0
 104 0008 4FF4E133 		mov	r3, #115200
 105 000c 4360     		str	r3, [r0, #4]
  93:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 106              		.loc 1 93 0
 107 000e 0023     		movs	r3, #0
 108 0010 8360     		str	r3, [r0, #8]
  94:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 109              		.loc 1 94 0
 110 0012 C360     		str	r3, [r0, #12]
  95:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 111              		.loc 1 95 0
 112 0014 0361     		str	r3, [r0, #16]
  96:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 113              		.loc 1 96 0
 114 0016 0C22     		movs	r2, #12
 115 0018 4261     		str	r2, [r0, #20]
  97:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 116              		.loc 1 97 0
 117 001a 8361     		str	r3, [r0, #24]
  98:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 118              		.loc 1 98 0
 119 001c C361     		str	r3, [r0, #28]
  99:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 120              		.loc 1 99 0
 121 001e FFF7FEFF 		bl	HAL_UART_Init
 122              	.LVL2:
 123 0022 00B9     		cbnz	r0, .L10
 124              	.L7:
 100:Core/Src/usart.c ****   {
 101:Core/Src/usart.c ****     _Error_Handler(__FILE__, __LINE__);
 102:Core/Src/usart.c ****   }
 103:Core/Src/usart.c **** 
 104:Core/Src/usart.c **** }
 125              		.loc 1 104 0
 126 0024 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 5


 127              	.L10:
 101:Core/Src/usart.c ****   }
 128              		.loc 1 101 0
 129 0026 6521     		movs	r1, #101
 130 0028 0348     		ldr	r0, .L11+8
 131 002a FFF7FEFF 		bl	_Error_Handler
 132              	.LVL3:
 133              		.loc 1 104 0
 134 002e F9E7     		b	.L7
 135              	.L12:
 136              		.align	2
 137              	.L11:
 138 0030 00000000 		.word	huart2
 139 0034 00440040 		.word	1073759232
 140 0038 00000000 		.word	.LC0
 141              		.cfi_endproc
 142              	.LFE67:
 144              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 145              		.align	1
 146              		.global	MX_USART3_UART_Init
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu softvfp
 152              	MX_USART3_UART_Init:
 153              	.LFB68:
 105:Core/Src/usart.c **** /* USART3 init function */
 106:Core/Src/usart.c **** 
 107:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
 108:Core/Src/usart.c **** {
 154              		.loc 1 108 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI2:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
 109:Core/Src/usart.c **** 
 110:Core/Src/usart.c ****   huart3.Instance = USART3;
 163              		.loc 1 110 0
 164 0002 0B48     		ldr	r0, .L17
 165 0004 0B4B     		ldr	r3, .L17+4
 166 0006 0360     		str	r3, [r0]
 111:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
 167              		.loc 1 111 0
 168 0008 4FF4E133 		mov	r3, #115200
 169 000c 4360     		str	r3, [r0, #4]
 112:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 170              		.loc 1 112 0
 171 000e 0023     		movs	r3, #0
 172 0010 8360     		str	r3, [r0, #8]
 113:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 173              		.loc 1 113 0
 174 0012 C360     		str	r3, [r0, #12]
 114:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 6


 175              		.loc 1 114 0
 176 0014 0361     		str	r3, [r0, #16]
 115:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 177              		.loc 1 115 0
 178 0016 0C22     		movs	r2, #12
 179 0018 4261     		str	r2, [r0, #20]
 116:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 180              		.loc 1 116 0
 181 001a 8361     		str	r3, [r0, #24]
 117:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 182              		.loc 1 117 0
 183 001c C361     		str	r3, [r0, #28]
 118:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 184              		.loc 1 118 0
 185 001e FFF7FEFF 		bl	HAL_UART_Init
 186              	.LVL4:
 187 0022 00B9     		cbnz	r0, .L16
 188              	.L13:
 119:Core/Src/usart.c ****   {
 120:Core/Src/usart.c ****     _Error_Handler(__FILE__, __LINE__);
 121:Core/Src/usart.c ****   }
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c **** }
 189              		.loc 1 123 0
 190 0024 08BD     		pop	{r3, pc}
 191              	.L16:
 120:Core/Src/usart.c ****   }
 192              		.loc 1 120 0
 193 0026 7821     		movs	r1, #120
 194 0028 0348     		ldr	r0, .L17+8
 195 002a FFF7FEFF 		bl	_Error_Handler
 196              	.LVL5:
 197              		.loc 1 123 0
 198 002e F9E7     		b	.L13
 199              	.L18:
 200              		.align	2
 201              	.L17:
 202 0030 00000000 		.word	huart3
 203 0034 00480040 		.word	1073760256
 204 0038 00000000 		.word	.LC0
 205              		.cfi_endproc
 206              	.LFE68:
 208              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 209              		.align	1
 210              		.global	HAL_UART_MspInit
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	HAL_UART_MspInit:
 217              	.LFB69:
 124:Core/Src/usart.c **** 
 125:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
 126:Core/Src/usart.c **** {
 218              		.loc 1 126 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 7


 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              	.LVL6:
 223 0000 70B5     		push	{r4, r5, r6, lr}
 224              	.LCFI3:
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 4, -16
 227              		.cfi_offset 5, -12
 228              		.cfi_offset 6, -8
 229              		.cfi_offset 14, -4
 230 0002 88B0     		sub	sp, sp, #32
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 48
 233 0004 0446     		mov	r4, r0
 127:Core/Src/usart.c **** 
 128:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 129:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 234              		.loc 1 129 0
 235 0006 0368     		ldr	r3, [r0]
 236 0008 564A     		ldr	r2, .L33
 237 000a 9342     		cmp	r3, r2
 238 000c 07D0     		beq	.L27
 130:Core/Src/usart.c ****   {
 131:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 132:Core/Src/usart.c **** 
 133:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
 134:Core/Src/usart.c ****     /* USART1 clock enable */
 135:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 136:Core/Src/usart.c ****   
 137:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
 138:Core/Src/usart.c ****     PA9     ------> USART1_TX
 139:Core/Src/usart.c ****     PA10     ------> USART1_RX 
 140:Core/Src/usart.c ****     */
 141:Core/Src/usart.c ****     GPIO_InitStruct.Pin = CoreBoard_TX_Pin;
 142:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 143:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 144:Core/Src/usart.c ****     HAL_GPIO_Init(CoreBoard_TX_GPIO_Port, &GPIO_InitStruct);
 145:Core/Src/usart.c **** 
 146:Core/Src/usart.c ****     GPIO_InitStruct.Pin = CoreBoard_RX_Pin;
 147:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 148:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 149:Core/Src/usart.c ****     HAL_GPIO_Init(CoreBoard_RX_GPIO_Port, &GPIO_InitStruct);
 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****     /* USART1 DMA Init */
 152:Core/Src/usart.c ****     /* USART1_RX Init */
 153:Core/Src/usart.c ****     hdma_usart1_rx.Instance = DMA1_Channel5;
 154:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 155:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 156:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 157:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 158:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 159:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 160:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 161:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 162:Core/Src/usart.c ****     {
 163:Core/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 164:Core/Src/usart.c ****     }
 165:Core/Src/usart.c **** 
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 8


 166:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 167:Core/Src/usart.c **** 
 168:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 169:Core/Src/usart.c **** 
 170:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 171:Core/Src/usart.c ****   }
 172:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 239              		.loc 1 172 0
 240 000e 564A     		ldr	r2, .L33+4
 241 0010 9342     		cmp	r3, r2
 242 0012 3BD0     		beq	.L28
 173:Core/Src/usart.c ****   {
 174:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 175:Core/Src/usart.c **** 
 176:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
 177:Core/Src/usart.c ****     /* USART2 clock enable */
 178:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 179:Core/Src/usart.c ****   
 180:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 181:Core/Src/usart.c ****     PA2     ------> USART2_TX
 182:Core/Src/usart.c ****     PA3     ------> USART2_RX 
 183:Core/Src/usart.c ****     */
 184:Core/Src/usart.c ****     GPIO_InitStruct.Pin = BSPA_TX_Pin;
 185:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 186:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 187:Core/Src/usart.c ****     HAL_GPIO_Init(BSPA_TX_GPIO_Port, &GPIO_InitStruct);
 188:Core/Src/usart.c **** 
 189:Core/Src/usart.c ****     GPIO_InitStruct.Pin = BSPA_RX_Pin;
 190:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 191:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 192:Core/Src/usart.c ****     HAL_GPIO_Init(BSPA_RX_GPIO_Port, &GPIO_InitStruct);
 193:Core/Src/usart.c **** 
 194:Core/Src/usart.c ****     /* USART2 DMA Init */
 195:Core/Src/usart.c ****     /* USART2_RX Init */
 196:Core/Src/usart.c ****     hdma_usart2_rx.Instance = DMA1_Channel6;
 197:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 198:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 199:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 200:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 201:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 202:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 203:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 204:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 205:Core/Src/usart.c ****     {
 206:Core/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 207:Core/Src/usart.c ****     }
 208:Core/Src/usart.c **** 
 209:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart2_rx);
 210:Core/Src/usart.c **** 
 211:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 212:Core/Src/usart.c **** 
 213:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 214:Core/Src/usart.c ****   }
 215:Core/Src/usart.c ****   else if(uartHandle->Instance==USART3)
 243              		.loc 1 215 0
 244 0014 554A     		ldr	r2, .L33+8
 245 0016 9342     		cmp	r3, r2
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 9


 246 0018 6DD0     		beq	.L29
 247              	.LVL7:
 248              	.L19:
 216:Core/Src/usart.c ****   {
 217:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
 218:Core/Src/usart.c **** 
 219:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
 220:Core/Src/usart.c ****     /* USART3 clock enable */
 221:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 222:Core/Src/usart.c ****   
 223:Core/Src/usart.c ****     /**USART3 GPIO Configuration    
 224:Core/Src/usart.c ****     PB10     ------> USART3_TX
 225:Core/Src/usart.c ****     PB11     ------> USART3_RX 
 226:Core/Src/usart.c ****     */
 227:Core/Src/usart.c ****     GPIO_InitStruct.Pin = BSPB_TX_Pin;
 228:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 229:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 230:Core/Src/usart.c ****     HAL_GPIO_Init(BSPB_TX_GPIO_Port, &GPIO_InitStruct);
 231:Core/Src/usart.c **** 
 232:Core/Src/usart.c ****     GPIO_InitStruct.Pin = BSPB_RX_Pin;
 233:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 234:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 235:Core/Src/usart.c ****     HAL_GPIO_Init(BSPB_RX_GPIO_Port, &GPIO_InitStruct);
 236:Core/Src/usart.c **** 
 237:Core/Src/usart.c ****     /* USART3 DMA Init */
 238:Core/Src/usart.c ****     /* USART3_RX Init */
 239:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Channel3;
 240:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 241:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 242:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 243:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 244:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 245:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 246:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 247:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 248:Core/Src/usart.c ****     {
 249:Core/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 250:Core/Src/usart.c ****     }
 251:Core/Src/usart.c **** 
 252:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 253:Core/Src/usart.c **** 
 254:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 255:Core/Src/usart.c **** 
 256:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 257:Core/Src/usart.c ****   }
 258:Core/Src/usart.c **** }
 249              		.loc 1 258 0
 250 001a 08B0     		add	sp, sp, #32
 251              	.LCFI5:
 252              		.cfi_remember_state
 253              		.cfi_def_cfa_offset 16
 254              		@ sp needed
 255 001c 70BD     		pop	{r4, r5, r6, pc}
 256              	.LVL8:
 257              	.L27:
 258              	.LCFI6:
 259              		.cfi_restore_state
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 10


 260              	.LBB2:
 135:Core/Src/usart.c ****   
 261              		.loc 1 135 0
 262 001e 544B     		ldr	r3, .L33+12
 263 0020 9A69     		ldr	r2, [r3, #24]
 264 0022 42F48042 		orr	r2, r2, #16384
 265 0026 9A61     		str	r2, [r3, #24]
 266 0028 9B69     		ldr	r3, [r3, #24]
 267 002a 03F48043 		and	r3, r3, #16384
 268 002e 0193     		str	r3, [sp, #4]
 269 0030 019B     		ldr	r3, [sp, #4]
 270              	.LBE2:
 141:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 271              		.loc 1 141 0
 272 0032 4FF40073 		mov	r3, #512
 273 0036 0493     		str	r3, [sp, #16]
 142:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 274              		.loc 1 142 0
 275 0038 0223     		movs	r3, #2
 276 003a 0593     		str	r3, [sp, #20]
 143:Core/Src/usart.c ****     HAL_GPIO_Init(CoreBoard_TX_GPIO_Port, &GPIO_InitStruct);
 277              		.loc 1 143 0
 278 003c 0323     		movs	r3, #3
 279 003e 0793     		str	r3, [sp, #28]
 144:Core/Src/usart.c **** 
 280              		.loc 1 144 0
 281 0040 4C4E     		ldr	r6, .L33+16
 282 0042 04A9     		add	r1, sp, #16
 283 0044 3046     		mov	r0, r6
 284              	.LVL9:
 285 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 286              	.LVL10:
 146:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 287              		.loc 1 146 0
 288 004a 4FF48063 		mov	r3, #1024
 289 004e 0493     		str	r3, [sp, #16]
 147:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 147 0
 291 0050 0025     		movs	r5, #0
 292 0052 0595     		str	r5, [sp, #20]
 148:Core/Src/usart.c ****     HAL_GPIO_Init(CoreBoard_RX_GPIO_Port, &GPIO_InitStruct);
 293              		.loc 1 148 0
 294 0054 0695     		str	r5, [sp, #24]
 149:Core/Src/usart.c **** 
 295              		.loc 1 149 0
 296 0056 04A9     		add	r1, sp, #16
 297 0058 3046     		mov	r0, r6
 298 005a FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL11:
 153:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 300              		.loc 1 153 0
 301 005e 4648     		ldr	r0, .L33+20
 302 0060 464B     		ldr	r3, .L33+24
 303 0062 0360     		str	r3, [r0]
 154:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 304              		.loc 1 154 0
 305 0064 4560     		str	r5, [r0, #4]
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 11


 155:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 306              		.loc 1 155 0
 307 0066 8560     		str	r5, [r0, #8]
 156:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 308              		.loc 1 156 0
 309 0068 8023     		movs	r3, #128
 310 006a C360     		str	r3, [r0, #12]
 157:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 311              		.loc 1 157 0
 312 006c 0561     		str	r5, [r0, #16]
 158:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 313              		.loc 1 158 0
 314 006e 4561     		str	r5, [r0, #20]
 159:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 315              		.loc 1 159 0
 316 0070 8561     		str	r5, [r0, #24]
 160:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 317              		.loc 1 160 0
 318 0072 C561     		str	r5, [r0, #28]
 161:Core/Src/usart.c ****     {
 319              		.loc 1 161 0
 320 0074 FFF7FEFF 		bl	HAL_DMA_Init
 321              	.LVL12:
 322 0078 18B9     		cbnz	r0, .L30
 323              	.L21:
 166:Core/Src/usart.c **** 
 324              		.loc 1 166 0
 325 007a 3F4B     		ldr	r3, .L33+20
 326 007c 6363     		str	r3, [r4, #52]
 327 007e 5C62     		str	r4, [r3, #36]
 328 0080 CBE7     		b	.L19
 329              	.L30:
 163:Core/Src/usart.c ****     }
 330              		.loc 1 163 0
 331 0082 A321     		movs	r1, #163
 332 0084 3E48     		ldr	r0, .L33+28
 333 0086 FFF7FEFF 		bl	_Error_Handler
 334              	.LVL13:
 335 008a F6E7     		b	.L21
 336              	.LVL14:
 337              	.L28:
 338              	.LBB3:
 178:Core/Src/usart.c ****   
 339              		.loc 1 178 0
 340 008c 384B     		ldr	r3, .L33+12
 341 008e DA69     		ldr	r2, [r3, #28]
 342 0090 42F40032 		orr	r2, r2, #131072
 343 0094 DA61     		str	r2, [r3, #28]
 344 0096 DB69     		ldr	r3, [r3, #28]
 345 0098 03F40033 		and	r3, r3, #131072
 346 009c 0293     		str	r3, [sp, #8]
 347 009e 029B     		ldr	r3, [sp, #8]
 348              	.LBE3:
 184:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 349              		.loc 1 184 0
 350 00a0 0423     		movs	r3, #4
 351 00a2 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 12


 185:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 352              		.loc 1 185 0
 353 00a4 0223     		movs	r3, #2
 354 00a6 0593     		str	r3, [sp, #20]
 186:Core/Src/usart.c ****     HAL_GPIO_Init(BSPA_TX_GPIO_Port, &GPIO_InitStruct);
 355              		.loc 1 186 0
 356 00a8 0323     		movs	r3, #3
 357 00aa 0793     		str	r3, [sp, #28]
 187:Core/Src/usart.c **** 
 358              		.loc 1 187 0
 359 00ac 314E     		ldr	r6, .L33+16
 360 00ae 04A9     		add	r1, sp, #16
 361 00b0 3046     		mov	r0, r6
 362              	.LVL15:
 363 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 364              	.LVL16:
 189:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 365              		.loc 1 189 0
 366 00b6 0823     		movs	r3, #8
 367 00b8 0493     		str	r3, [sp, #16]
 190:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 368              		.loc 1 190 0
 369 00ba 0025     		movs	r5, #0
 370 00bc 0595     		str	r5, [sp, #20]
 191:Core/Src/usart.c ****     HAL_GPIO_Init(BSPA_RX_GPIO_Port, &GPIO_InitStruct);
 371              		.loc 1 191 0
 372 00be 0695     		str	r5, [sp, #24]
 192:Core/Src/usart.c **** 
 373              		.loc 1 192 0
 374 00c0 04A9     		add	r1, sp, #16
 375 00c2 3046     		mov	r0, r6
 376 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 377              	.LVL17:
 196:Core/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 378              		.loc 1 196 0
 379 00c8 2E48     		ldr	r0, .L33+32
 380 00ca 2F4B     		ldr	r3, .L33+36
 381 00cc 0360     		str	r3, [r0]
 197:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 382              		.loc 1 197 0
 383 00ce 4560     		str	r5, [r0, #4]
 198:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 384              		.loc 1 198 0
 385 00d0 8560     		str	r5, [r0, #8]
 199:Core/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 386              		.loc 1 199 0
 387 00d2 8023     		movs	r3, #128
 388 00d4 C360     		str	r3, [r0, #12]
 200:Core/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 389              		.loc 1 200 0
 390 00d6 0561     		str	r5, [r0, #16]
 201:Core/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 391              		.loc 1 201 0
 392 00d8 4561     		str	r5, [r0, #20]
 202:Core/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 393              		.loc 1 202 0
 394 00da 8561     		str	r5, [r0, #24]
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 13


 203:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 395              		.loc 1 203 0
 396 00dc C561     		str	r5, [r0, #28]
 204:Core/Src/usart.c ****     {
 397              		.loc 1 204 0
 398 00de FFF7FEFF 		bl	HAL_DMA_Init
 399              	.LVL18:
 400 00e2 18B9     		cbnz	r0, .L31
 401              	.L24:
 209:Core/Src/usart.c **** 
 402              		.loc 1 209 0
 403 00e4 274B     		ldr	r3, .L33+32
 404 00e6 6363     		str	r3, [r4, #52]
 405 00e8 5C62     		str	r4, [r3, #36]
 406 00ea 96E7     		b	.L19
 407              	.L31:
 206:Core/Src/usart.c ****     }
 408              		.loc 1 206 0
 409 00ec CE21     		movs	r1, #206
 410 00ee 2448     		ldr	r0, .L33+28
 411 00f0 FFF7FEFF 		bl	_Error_Handler
 412              	.LVL19:
 413 00f4 F6E7     		b	.L24
 414              	.LVL20:
 415              	.L29:
 416              	.LBB4:
 221:Core/Src/usart.c ****   
 417              		.loc 1 221 0
 418 00f6 1E4B     		ldr	r3, .L33+12
 419 00f8 DA69     		ldr	r2, [r3, #28]
 420 00fa 42F48022 		orr	r2, r2, #262144
 421 00fe DA61     		str	r2, [r3, #28]
 422 0100 DB69     		ldr	r3, [r3, #28]
 423 0102 03F48023 		and	r3, r3, #262144
 424 0106 0393     		str	r3, [sp, #12]
 425 0108 039B     		ldr	r3, [sp, #12]
 426              	.LBE4:
 227:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 427              		.loc 1 227 0
 428 010a 4FF48063 		mov	r3, #1024
 429 010e 0493     		str	r3, [sp, #16]
 228:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 430              		.loc 1 228 0
 431 0110 0223     		movs	r3, #2
 432 0112 0593     		str	r3, [sp, #20]
 229:Core/Src/usart.c ****     HAL_GPIO_Init(BSPB_TX_GPIO_Port, &GPIO_InitStruct);
 433              		.loc 1 229 0
 434 0114 0323     		movs	r3, #3
 435 0116 0793     		str	r3, [sp, #28]
 230:Core/Src/usart.c **** 
 436              		.loc 1 230 0
 437 0118 1C4E     		ldr	r6, .L33+40
 438 011a 04A9     		add	r1, sp, #16
 439 011c 3046     		mov	r0, r6
 440              	.LVL21:
 441 011e FFF7FEFF 		bl	HAL_GPIO_Init
 442              	.LVL22:
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 14


 232:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 443              		.loc 1 232 0
 444 0122 4FF40063 		mov	r3, #2048
 445 0126 0493     		str	r3, [sp, #16]
 233:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 446              		.loc 1 233 0
 447 0128 0025     		movs	r5, #0
 448 012a 0595     		str	r5, [sp, #20]
 234:Core/Src/usart.c ****     HAL_GPIO_Init(BSPB_RX_GPIO_Port, &GPIO_InitStruct);
 449              		.loc 1 234 0
 450 012c 0695     		str	r5, [sp, #24]
 235:Core/Src/usart.c **** 
 451              		.loc 1 235 0
 452 012e 04A9     		add	r1, sp, #16
 453 0130 3046     		mov	r0, r6
 454 0132 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL23:
 239:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 456              		.loc 1 239 0
 457 0136 1648     		ldr	r0, .L33+44
 458 0138 164B     		ldr	r3, .L33+48
 459 013a 0360     		str	r3, [r0]
 240:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 460              		.loc 1 240 0
 461 013c 4560     		str	r5, [r0, #4]
 241:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 462              		.loc 1 241 0
 463 013e 8560     		str	r5, [r0, #8]
 242:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 464              		.loc 1 242 0
 465 0140 8023     		movs	r3, #128
 466 0142 C360     		str	r3, [r0, #12]
 243:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 467              		.loc 1 243 0
 468 0144 0561     		str	r5, [r0, #16]
 244:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 469              		.loc 1 244 0
 470 0146 4561     		str	r5, [r0, #20]
 245:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 471              		.loc 1 245 0
 472 0148 8561     		str	r5, [r0, #24]
 246:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 473              		.loc 1 246 0
 474 014a C561     		str	r5, [r0, #28]
 247:Core/Src/usart.c ****     {
 475              		.loc 1 247 0
 476 014c FFF7FEFF 		bl	HAL_DMA_Init
 477              	.LVL24:
 478 0150 18B9     		cbnz	r0, .L32
 479              	.L25:
 252:Core/Src/usart.c **** 
 480              		.loc 1 252 0
 481 0152 0F4B     		ldr	r3, .L33+44
 482 0154 6363     		str	r3, [r4, #52]
 483 0156 5C62     		str	r4, [r3, #36]
 484              		.loc 1 258 0
 485 0158 5FE7     		b	.L19
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 15


 486              	.L32:
 249:Core/Src/usart.c ****     }
 487              		.loc 1 249 0
 488 015a F921     		movs	r1, #249
 489 015c 0848     		ldr	r0, .L33+28
 490 015e FFF7FEFF 		bl	_Error_Handler
 491              	.LVL25:
 492 0162 F6E7     		b	.L25
 493              	.L34:
 494              		.align	2
 495              	.L33:
 496 0164 00380140 		.word	1073821696
 497 0168 00440040 		.word	1073759232
 498 016c 00480040 		.word	1073760256
 499 0170 00100240 		.word	1073876992
 500 0174 00080140 		.word	1073809408
 501 0178 00000000 		.word	hdma_usart1_rx
 502 017c 58000240 		.word	1073872984
 503 0180 00000000 		.word	.LC0
 504 0184 00000000 		.word	hdma_usart2_rx
 505 0188 6C000240 		.word	1073873004
 506 018c 000C0140 		.word	1073810432
 507 0190 00000000 		.word	hdma_usart3_rx
 508 0194 30000240 		.word	1073872944
 509              		.cfi_endproc
 510              	.LFE69:
 512              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 513              		.align	1
 514              		.global	HAL_UART_MspDeInit
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu softvfp
 520              	HAL_UART_MspDeInit:
 521              	.LFB70:
 259:Core/Src/usart.c **** 
 260:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 261:Core/Src/usart.c **** {
 522              		.loc 1 261 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL26:
 527 0000 10B5     		push	{r4, lr}
 528              	.LCFI7:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 4, -8
 531              		.cfi_offset 14, -4
 532 0002 0446     		mov	r4, r0
 262:Core/Src/usart.c **** 
 263:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 533              		.loc 1 263 0
 534 0004 0368     		ldr	r3, [r0]
 535 0006 1F4A     		ldr	r2, .L43
 536 0008 9342     		cmp	r3, r2
 537 000a 06D0     		beq	.L40
 264:Core/Src/usart.c ****   {
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 16


 265:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 266:Core/Src/usart.c **** 
 267:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 268:Core/Src/usart.c ****     /* Peripheral clock disable */
 269:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 270:Core/Src/usart.c ****   
 271:Core/Src/usart.c ****     /**USART1 GPIO Configuration    
 272:Core/Src/usart.c ****     PA9     ------> USART1_TX
 273:Core/Src/usart.c ****     PA10     ------> USART1_RX 
 274:Core/Src/usart.c ****     */
 275:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, CoreBoard_TX_Pin|CoreBoard_RX_Pin);
 276:Core/Src/usart.c **** 
 277:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 278:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 279:Core/Src/usart.c **** 
 280:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 281:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 282:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 283:Core/Src/usart.c **** 
 284:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 285:Core/Src/usart.c ****   }
 286:Core/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 538              		.loc 1 286 0
 539 000c 1E4A     		ldr	r2, .L43+4
 540 000e 9342     		cmp	r3, r2
 541 0010 15D0     		beq	.L41
 287:Core/Src/usart.c ****   {
 288:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 289:Core/Src/usart.c **** 
 290:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 291:Core/Src/usart.c ****     /* Peripheral clock disable */
 292:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 293:Core/Src/usart.c ****   
 294:Core/Src/usart.c ****     /**USART2 GPIO Configuration    
 295:Core/Src/usart.c ****     PA2     ------> USART2_TX
 296:Core/Src/usart.c ****     PA3     ------> USART2_RX 
 297:Core/Src/usart.c ****     */
 298:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, BSPA_TX_Pin|BSPA_RX_Pin);
 299:Core/Src/usart.c **** 
 300:Core/Src/usart.c ****     /* USART2 DMA DeInit */
 301:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 302:Core/Src/usart.c **** 
 303:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 304:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 305:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 306:Core/Src/usart.c **** 
 307:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 308:Core/Src/usart.c ****   }
 309:Core/Src/usart.c ****   else if(uartHandle->Instance==USART3)
 542              		.loc 1 309 0
 543 0012 1E4A     		ldr	r2, .L43+8
 544 0014 9342     		cmp	r3, r2
 545 0016 23D0     		beq	.L42
 546              	.LVL27:
 547              	.L35:
 310:Core/Src/usart.c ****   {
 311:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 17


 312:Core/Src/usart.c **** 
 313:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 314:Core/Src/usart.c ****     /* Peripheral clock disable */
 315:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 316:Core/Src/usart.c ****   
 317:Core/Src/usart.c ****     /**USART3 GPIO Configuration    
 318:Core/Src/usart.c ****     PB10     ------> USART3_TX
 319:Core/Src/usart.c ****     PB11     ------> USART3_RX 
 320:Core/Src/usart.c ****     */
 321:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, BSPB_TX_Pin|BSPB_RX_Pin);
 322:Core/Src/usart.c **** 
 323:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 324:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 325:Core/Src/usart.c **** 
 326:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 327:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 328:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 329:Core/Src/usart.c **** 
 330:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 331:Core/Src/usart.c ****   }
 332:Core/Src/usart.c **** } 
 548              		.loc 1 332 0
 549 0018 10BD     		pop	{r4, pc}
 550              	.LVL28:
 551              	.L40:
 269:Core/Src/usart.c ****   
 552              		.loc 1 269 0
 553 001a 02F55842 		add	r2, r2, #55296
 554 001e 9369     		ldr	r3, [r2, #24]
 555 0020 23F48043 		bic	r3, r3, #16384
 556 0024 9361     		str	r3, [r2, #24]
 275:Core/Src/usart.c **** 
 557              		.loc 1 275 0
 558 0026 4FF4C061 		mov	r1, #1536
 559 002a 1948     		ldr	r0, .L43+12
 560              	.LVL29:
 561 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 562              	.LVL30:
 278:Core/Src/usart.c **** 
 563              		.loc 1 278 0
 564 0030 606B     		ldr	r0, [r4, #52]
 565 0032 FFF7FEFF 		bl	HAL_DMA_DeInit
 566              	.LVL31:
 281:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 567              		.loc 1 281 0
 568 0036 2520     		movs	r0, #37
 569 0038 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 570              	.LVL32:
 571 003c ECE7     		b	.L35
 572              	.LVL33:
 573              	.L41:
 292:Core/Src/usart.c ****   
 574              		.loc 1 292 0
 575 003e 02F5E632 		add	r2, r2, #117760
 576 0042 D369     		ldr	r3, [r2, #28]
 577 0044 23F40033 		bic	r3, r3, #131072
 578 0048 D361     		str	r3, [r2, #28]
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 18


 298:Core/Src/usart.c **** 
 579              		.loc 1 298 0
 580 004a 0C21     		movs	r1, #12
 581 004c 1048     		ldr	r0, .L43+12
 582              	.LVL34:
 583 004e FFF7FEFF 		bl	HAL_GPIO_DeInit
 584              	.LVL35:
 301:Core/Src/usart.c **** 
 585              		.loc 1 301 0
 586 0052 606B     		ldr	r0, [r4, #52]
 587 0054 FFF7FEFF 		bl	HAL_DMA_DeInit
 588              	.LVL36:
 304:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 589              		.loc 1 304 0
 590 0058 2620     		movs	r0, #38
 591 005a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 592              	.LVL37:
 593 005e DBE7     		b	.L35
 594              	.LVL38:
 595              	.L42:
 315:Core/Src/usart.c ****   
 596              		.loc 1 315 0
 597 0060 02F5E432 		add	r2, r2, #116736
 598 0064 D369     		ldr	r3, [r2, #28]
 599 0066 23F48023 		bic	r3, r3, #262144
 600 006a D361     		str	r3, [r2, #28]
 321:Core/Src/usart.c **** 
 601              		.loc 1 321 0
 602 006c 4FF44061 		mov	r1, #3072
 603 0070 0848     		ldr	r0, .L43+16
 604              	.LVL39:
 605 0072 FFF7FEFF 		bl	HAL_GPIO_DeInit
 606              	.LVL40:
 324:Core/Src/usart.c **** 
 607              		.loc 1 324 0
 608 0076 606B     		ldr	r0, [r4, #52]
 609 0078 FFF7FEFF 		bl	HAL_DMA_DeInit
 610              	.LVL41:
 327:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 611              		.loc 1 327 0
 612 007c 2720     		movs	r0, #39
 613 007e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 614              	.LVL42:
 615              		.loc 1 332 0
 616 0082 C9E7     		b	.L35
 617              	.L44:
 618              		.align	2
 619              	.L43:
 620 0084 00380140 		.word	1073821696
 621 0088 00440040 		.word	1073759232
 622 008c 00480040 		.word	1073760256
 623 0090 00080140 		.word	1073809408
 624 0094 000C0140 		.word	1073810432
 625              		.cfi_endproc
 626              	.LFE70:
 628              		.comm	hdma_usart3_rx,68,4
 629              		.comm	hdma_usart2_rx,68,4
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 19


 630              		.comm	hdma_usart1_rx,68,4
 631              		.comm	huart3,64,4
 632              		.comm	huart2,64,4
 633              		.comm	huart1,64,4
 634              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 635              		.align	2
 636              	.LC0:
 637 0000 436F7265 		.ascii	"Core/Src/usart.c\000"
 637      2F537263 
 637      2F757361 
 637      72742E63 
 637      00
 638              		.text
 639              	.Letext0:
 640              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 641              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 642              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 643              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 644              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 645              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 646              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 647              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 648              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 649              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 650              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 651              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 652              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 653              		.file 15 "Core/Inc/usart.h"
 654              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 655              		.file 17 "Core/Inc/dma.h"
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:16     .text.MX_USART1_UART_Init:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:23     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:74     .text.MX_USART1_UART_Init:00000030 $d
                            *COM*:00000040 huart1
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:81     .text.MX_USART2_UART_Init:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:88     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:138    .text.MX_USART2_UART_Init:00000030 $d
                            *COM*:00000040 huart2
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:145    .text.MX_USART3_UART_Init:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:152    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:202    .text.MX_USART3_UART_Init:00000030 $d
                            *COM*:00000040 huart3
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:209    .text.HAL_UART_MspInit:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:216    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:496    .text.HAL_UART_MspInit:00000164 $d
                            *COM*:00000044 hdma_usart1_rx
                            *COM*:00000044 hdma_usart2_rx
                            *COM*:00000044 hdma_usart3_rx
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:513    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:520    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:620    .text.HAL_UART_MspDeInit:00000084 $d
C:\Users\bertz\AppData\Local\Temp\ccoL2rc7.s:635    .rodata.MX_USART1_UART_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
