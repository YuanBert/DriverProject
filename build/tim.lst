ARM GAS  /tmp/cc9Kr940.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_TIM4_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_TIM4_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_TIM4_Init:
  24              	.LFB65:
  25              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * File Name          : TIM.c
   4:Core/Src/tim.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/tim.c ****   *                      of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * This notice applies to any and all portions of this file
   8:Core/Src/tim.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/tim.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/tim.c ****   * inserted by the user or by software development tools
  11:Core/Src/tim.c ****   * are owned by their respective copyright owners.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Core/Src/tim.c ****   * All rights reserved.
  15:Core/Src/tim.c ****   *
  16:Core/Src/tim.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Core/Src/tim.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Core/Src/tim.c ****   *
  19:Core/Src/tim.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Core/Src/tim.c ****   *    this list of conditions and the following disclaimer.
  21:Core/Src/tim.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Core/Src/tim.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Core/Src/tim.c ****   *    and/or other materials provided with the distribution.
  24:Core/Src/tim.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Core/Src/tim.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Core/Src/tim.c ****   *    derived from this software without specific written permission.
  27:Core/Src/tim.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Core/Src/tim.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Core/Src/tim.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Core/Src/tim.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Core/Src/tim.c ****   *    this license is void and will automatically terminate your rights under 
  32:Core/Src/tim.c ****   *    this license. 
  33:Core/Src/tim.c ****   *
ARM GAS  /tmp/cc9Kr940.s 			page 2


  34:Core/Src/tim.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Core/Src/tim.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Core/Src/tim.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Core/Src/tim.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Core/Src/tim.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Core/Src/tim.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Core/Src/tim.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Core/Src/tim.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Core/Src/tim.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Core/Src/tim.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Core/Src/tim.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Core/Src/tim.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Core/Src/tim.c ****   *
  47:Core/Src/tim.c ****   ******************************************************************************
  48:Core/Src/tim.c ****   */
  49:Core/Src/tim.c **** 
  50:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  51:Core/Src/tim.c **** #include "tim.h"
  52:Core/Src/tim.c **** 
  53:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/tim.c **** 
  55:Core/Src/tim.c **** /* USER CODE END 0 */
  56:Core/Src/tim.c **** 
  57:Core/Src/tim.c **** TIM_HandleTypeDef htim3;
  58:Core/Src/tim.c **** TIM_HandleTypeDef htim4;
  59:Core/Src/tim.c **** TIM_HandleTypeDef htim5;
  60:Core/Src/tim.c **** 
  61:Core/Src/tim.c **** /* TIM3 init function */
  62:Core/Src/tim.c **** void MX_TIM3_Init(void)
  63:Core/Src/tim.c **** {
  64:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  65:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig;
  66:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC;
  67:Core/Src/tim.c **** 
  68:Core/Src/tim.c ****   htim3.Instance = TIM3;
  69:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
  70:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  71:Core/Src/tim.c ****   htim3.Init.Period = 0;
  72:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  73:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  74:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
  75:Core/Src/tim.c ****   {
  76:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  77:Core/Src/tim.c ****   }
  78:Core/Src/tim.c **** 
  79:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  80:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
  81:Core/Src/tim.c ****   {
  82:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  83:Core/Src/tim.c ****   }
  84:Core/Src/tim.c **** 
  85:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
  86:Core/Src/tim.c ****   {
  87:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  88:Core/Src/tim.c ****   }
  89:Core/Src/tim.c **** 
  90:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  /tmp/cc9Kr940.s 			page 3


  91:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  92:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
  93:Core/Src/tim.c ****   {
  94:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  95:Core/Src/tim.c ****   }
  96:Core/Src/tim.c **** 
  97:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  98:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  99:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 100:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 101:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 102:Core/Src/tim.c ****   {
 103:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 104:Core/Src/tim.c ****   }
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim3);
 107:Core/Src/tim.c **** 
 108:Core/Src/tim.c **** }
 109:Core/Src/tim.c **** /* TIM4 init function */
 110:Core/Src/tim.c **** void MX_TIM4_Init(void)
 111:Core/Src/tim.c **** {
  26              		.loc 1 111 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 87B0     		sub	sp, sp, #28
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 32
 112:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 113:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig;
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c ****   htim4.Instance = TIM4;
  37              		.loc 1 115 0
  38 0004 1748     		ldr	r0, .L9
  39 0006 184B     		ldr	r3, .L9+4
  40 0008 0360     		str	r3, [r0]
 116:Core/Src/tim.c ****   htim4.Init.Prescaler = 0;
  41              		.loc 1 116 0
  42 000a 0023     		movs	r3, #0
  43 000c 4360     		str	r3, [r0, #4]
 117:Core/Src/tim.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
  44              		.loc 1 117 0
  45 000e 8360     		str	r3, [r0, #8]
 118:Core/Src/tim.c ****   htim4.Init.Period = 0;
  46              		.loc 1 118 0
  47 0010 C360     		str	r3, [r0, #12]
 119:Core/Src/tim.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  48              		.loc 1 119 0
  49 0012 0361     		str	r3, [r0, #16]
 120:Core/Src/tim.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  50              		.loc 1 120 0
  51 0014 8361     		str	r3, [r0, #24]
 121:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
ARM GAS  /tmp/cc9Kr940.s 			page 4


  52              		.loc 1 121 0
  53 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
  54              	.LVL0:
  55 001a 98B9     		cbnz	r0, .L6
  56              	.L2:
 122:Core/Src/tim.c ****   {
 123:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 124:Core/Src/tim.c ****   }
 125:Core/Src/tim.c **** 
 126:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  57              		.loc 1 126 0
  58 001c 06A9     		add	r1, sp, #24
  59 001e 4FF48053 		mov	r3, #4096
  60 0022 41F8103D 		str	r3, [r1, #-16]!
 127:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
  61              		.loc 1 127 0
  62 0026 0F48     		ldr	r0, .L9
  63 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  64              	.LVL1:
  65 002c 78B9     		cbnz	r0, .L7
  66              	.L3:
 128:Core/Src/tim.c ****   {
 129:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 130:Core/Src/tim.c ****   }
 131:Core/Src/tim.c **** 
 132:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  67              		.loc 1 132 0
  68 002e 0023     		movs	r3, #0
  69 0030 0093     		str	r3, [sp]
 133:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  70              		.loc 1 133 0
  71 0032 0193     		str	r3, [sp, #4]
 134:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
  72              		.loc 1 134 0
  73 0034 6946     		mov	r1, sp
  74 0036 0B48     		ldr	r0, .L9
  75 0038 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  76              	.LVL2:
  77 003c 60B9     		cbnz	r0, .L8
  78              	.L1:
 135:Core/Src/tim.c ****   {
 136:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 137:Core/Src/tim.c ****   }
 138:Core/Src/tim.c **** 
 139:Core/Src/tim.c **** }
  79              		.loc 1 139 0
  80 003e 07B0     		add	sp, sp, #28
  81              	.LCFI2:
  82              		.cfi_remember_state
  83              		.cfi_def_cfa_offset 4
  84              		@ sp needed
  85 0040 5DF804FB 		ldr	pc, [sp], #4
  86              	.L6:
  87              	.LCFI3:
  88              		.cfi_restore_state
 123:Core/Src/tim.c ****   }
  89              		.loc 1 123 0
ARM GAS  /tmp/cc9Kr940.s 			page 5


  90 0044 7B21     		movs	r1, #123
  91 0046 0948     		ldr	r0, .L9+8
  92 0048 FFF7FEFF 		bl	_Error_Handler
  93              	.LVL3:
  94 004c E6E7     		b	.L2
  95              	.L7:
 129:Core/Src/tim.c ****   }
  96              		.loc 1 129 0
  97 004e 8121     		movs	r1, #129
  98 0050 0648     		ldr	r0, .L9+8
  99 0052 FFF7FEFF 		bl	_Error_Handler
 100              	.LVL4:
 101 0056 EAE7     		b	.L3
 102              	.L8:
 136:Core/Src/tim.c ****   }
 103              		.loc 1 136 0
 104 0058 8821     		movs	r1, #136
 105 005a 0448     		ldr	r0, .L9+8
 106 005c FFF7FEFF 		bl	_Error_Handler
 107              	.LVL5:
 108              		.loc 1 139 0
 109 0060 EDE7     		b	.L1
 110              	.L10:
 111 0062 00BF     		.align	2
 112              	.L9:
 113 0064 00000000 		.word	htim4
 114 0068 00080040 		.word	1073743872
 115 006c 00000000 		.word	.LC0
 116              		.cfi_endproc
 117              	.LFE65:
 119              		.section	.text.MX_TIM5_Init,"ax",%progbits
 120              		.align	1
 121              		.global	MX_TIM5_Init
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	MX_TIM5_Init:
 128              	.LFB66:
 140:Core/Src/tim.c **** /* TIM5 init function */
 141:Core/Src/tim.c **** void MX_TIM5_Init(void)
 142:Core/Src/tim.c **** {
 129              		.loc 1 142 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 24
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133 0000 00B5     		push	{lr}
 134              	.LCFI4:
 135              		.cfi_def_cfa_offset 4
 136              		.cfi_offset 14, -4
 137 0002 87B0     		sub	sp, sp, #28
 138              	.LCFI5:
 139              		.cfi_def_cfa_offset 32
 143:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 144:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig;
 145:Core/Src/tim.c **** 
 146:Core/Src/tim.c ****   htim5.Instance = TIM5;
ARM GAS  /tmp/cc9Kr940.s 			page 6


 140              		.loc 1 146 0
 141 0004 1748     		ldr	r0, .L19
 142 0006 184B     		ldr	r3, .L19+4
 143 0008 0360     		str	r3, [r0]
 147:Core/Src/tim.c ****   htim5.Init.Prescaler = 0;
 144              		.loc 1 147 0
 145 000a 0023     		movs	r3, #0
 146 000c 4360     		str	r3, [r0, #4]
 148:Core/Src/tim.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 147              		.loc 1 148 0
 148 000e 8360     		str	r3, [r0, #8]
 149:Core/Src/tim.c ****   htim5.Init.Period = 0;
 149              		.loc 1 149 0
 150 0010 C360     		str	r3, [r0, #12]
 150:Core/Src/tim.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 151              		.loc 1 150 0
 152 0012 0361     		str	r3, [r0, #16]
 151:Core/Src/tim.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 153              		.loc 1 151 0
 154 0014 8361     		str	r3, [r0, #24]
 152:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 155              		.loc 1 152 0
 156 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 157              	.LVL6:
 158 001a 98B9     		cbnz	r0, .L16
 159              	.L12:
 153:Core/Src/tim.c ****   {
 154:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 155:Core/Src/tim.c ****   }
 156:Core/Src/tim.c **** 
 157:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 160              		.loc 1 157 0
 161 001c 06A9     		add	r1, sp, #24
 162 001e 4FF48053 		mov	r3, #4096
 163 0022 41F8103D 		str	r3, [r1, #-16]!
 158:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 164              		.loc 1 158 0
 165 0026 0F48     		ldr	r0, .L19
 166 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 167              	.LVL7:
 168 002c 78B9     		cbnz	r0, .L17
 169              	.L13:
 159:Core/Src/tim.c ****   {
 160:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 161:Core/Src/tim.c ****   }
 162:Core/Src/tim.c **** 
 163:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 170              		.loc 1 163 0
 171 002e 0023     		movs	r3, #0
 172 0030 0093     		str	r3, [sp]
 164:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 173              		.loc 1 164 0
 174 0032 0193     		str	r3, [sp, #4]
 165:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 175              		.loc 1 165 0
 176 0034 6946     		mov	r1, sp
 177 0036 0B48     		ldr	r0, .L19
ARM GAS  /tmp/cc9Kr940.s 			page 7


 178 0038 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 179              	.LVL8:
 180 003c 60B9     		cbnz	r0, .L18
 181              	.L11:
 166:Core/Src/tim.c ****   {
 167:Core/Src/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 168:Core/Src/tim.c ****   }
 169:Core/Src/tim.c **** 
 170:Core/Src/tim.c **** }
 182              		.loc 1 170 0
 183 003e 07B0     		add	sp, sp, #28
 184              	.LCFI6:
 185              		.cfi_remember_state
 186              		.cfi_def_cfa_offset 4
 187              		@ sp needed
 188 0040 5DF804FB 		ldr	pc, [sp], #4
 189              	.L16:
 190              	.LCFI7:
 191              		.cfi_restore_state
 154:Core/Src/tim.c ****   }
 192              		.loc 1 154 0
 193 0044 9A21     		movs	r1, #154
 194 0046 0948     		ldr	r0, .L19+8
 195 0048 FFF7FEFF 		bl	_Error_Handler
 196              	.LVL9:
 197 004c E6E7     		b	.L12
 198              	.L17:
 160:Core/Src/tim.c ****   }
 199              		.loc 1 160 0
 200 004e A021     		movs	r1, #160
 201 0050 0648     		ldr	r0, .L19+8
 202 0052 FFF7FEFF 		bl	_Error_Handler
 203              	.LVL10:
 204 0056 EAE7     		b	.L13
 205              	.L18:
 167:Core/Src/tim.c ****   }
 206              		.loc 1 167 0
 207 0058 A721     		movs	r1, #167
 208 005a 0448     		ldr	r0, .L19+8
 209 005c FFF7FEFF 		bl	_Error_Handler
 210              	.LVL11:
 211              		.loc 1 170 0
 212 0060 EDE7     		b	.L11
 213              	.L20:
 214 0062 00BF     		.align	2
 215              	.L19:
 216 0064 00000000 		.word	htim5
 217 0068 000C0040 		.word	1073744896
 218 006c 00000000 		.word	.LC0
 219              		.cfi_endproc
 220              	.LFE66:
 222              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 223              		.align	1
 224              		.global	HAL_TIM_Base_MspInit
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
ARM GAS  /tmp/cc9Kr940.s 			page 8


 228              		.fpu softvfp
 230              	HAL_TIM_Base_MspInit:
 231              	.LFB67:
 171:Core/Src/tim.c **** 
 172:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 173:Core/Src/tim.c **** {
 232              		.loc 1 173 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 16
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL12:
 238 0000 84B0     		sub	sp, sp, #16
 239              	.LCFI8:
 240              		.cfi_def_cfa_offset 16
 174:Core/Src/tim.c **** 
 175:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM3)
 241              		.loc 1 175 0
 242 0002 0368     		ldr	r3, [r0]
 243 0004 154A     		ldr	r2, .L29
 244 0006 9342     		cmp	r3, r2
 245 0008 07D0     		beq	.L26
 176:Core/Src/tim.c ****   {
 177:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 178:Core/Src/tim.c **** 
 179:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 0 */
 180:Core/Src/tim.c ****     /* TIM3 clock enable */
 181:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 182:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 183:Core/Src/tim.c **** 
 184:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 1 */
 185:Core/Src/tim.c ****   }
 186:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM4)
 246              		.loc 1 186 0
 247 000a 154A     		ldr	r2, .L29+4
 248 000c 9342     		cmp	r3, r2
 249 000e 0FD0     		beq	.L27
 187:Core/Src/tim.c ****   {
 188:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 189:Core/Src/tim.c **** 
 190:Core/Src/tim.c ****   /* USER CODE END TIM4_MspInit 0 */
 191:Core/Src/tim.c ****     /* TIM4 clock enable */
 192:Core/Src/tim.c ****     __HAL_RCC_TIM4_CLK_ENABLE();
 193:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 194:Core/Src/tim.c **** 
 195:Core/Src/tim.c ****   /* USER CODE END TIM4_MspInit 1 */
 196:Core/Src/tim.c ****   }
 197:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM5)
 250              		.loc 1 197 0
 251 0010 144A     		ldr	r2, .L29+8
 252 0012 9342     		cmp	r3, r2
 253 0014 17D0     		beq	.L28
 254              	.L21:
 198:Core/Src/tim.c ****   {
 199:Core/Src/tim.c ****   /* USER CODE BEGIN TIM5_MspInit 0 */
 200:Core/Src/tim.c **** 
 201:Core/Src/tim.c ****   /* USER CODE END TIM5_MspInit 0 */
ARM GAS  /tmp/cc9Kr940.s 			page 9


 202:Core/Src/tim.c ****     /* TIM5 clock enable */
 203:Core/Src/tim.c ****     __HAL_RCC_TIM5_CLK_ENABLE();
 204:Core/Src/tim.c ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 205:Core/Src/tim.c **** 
 206:Core/Src/tim.c ****   /* USER CODE END TIM5_MspInit 1 */
 207:Core/Src/tim.c ****   }
 208:Core/Src/tim.c **** }
 255              		.loc 1 208 0
 256 0016 04B0     		add	sp, sp, #16
 257              	.LCFI9:
 258              		.cfi_remember_state
 259              		.cfi_def_cfa_offset 0
 260              		@ sp needed
 261 0018 7047     		bx	lr
 262              	.L26:
 263              	.LCFI10:
 264              		.cfi_restore_state
 265              	.LBB2:
 181:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 266              		.loc 1 181 0
 267 001a 134B     		ldr	r3, .L29+12
 268 001c DA69     		ldr	r2, [r3, #28]
 269 001e 42F00202 		orr	r2, r2, #2
 270 0022 DA61     		str	r2, [r3, #28]
 271 0024 DB69     		ldr	r3, [r3, #28]
 272 0026 03F00203 		and	r3, r3, #2
 273 002a 0193     		str	r3, [sp, #4]
 274 002c 019B     		ldr	r3, [sp, #4]
 275              	.LBE2:
 276 002e F2E7     		b	.L21
 277              	.L27:
 278              	.LBB3:
 192:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 279              		.loc 1 192 0
 280 0030 0D4B     		ldr	r3, .L29+12
 281 0032 DA69     		ldr	r2, [r3, #28]
 282 0034 42F00402 		orr	r2, r2, #4
 283 0038 DA61     		str	r2, [r3, #28]
 284 003a DB69     		ldr	r3, [r3, #28]
 285 003c 03F00403 		and	r3, r3, #4
 286 0040 0293     		str	r3, [sp, #8]
 287 0042 029B     		ldr	r3, [sp, #8]
 288              	.LBE3:
 289 0044 E7E7     		b	.L21
 290              	.L28:
 291              	.LBB4:
 203:Core/Src/tim.c ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 292              		.loc 1 203 0
 293 0046 084B     		ldr	r3, .L29+12
 294 0048 DA69     		ldr	r2, [r3, #28]
 295 004a 42F00802 		orr	r2, r2, #8
 296 004e DA61     		str	r2, [r3, #28]
 297 0050 DB69     		ldr	r3, [r3, #28]
 298 0052 03F00803 		and	r3, r3, #8
 299 0056 0393     		str	r3, [sp, #12]
 300 0058 039B     		ldr	r3, [sp, #12]
 301              	.LBE4:
ARM GAS  /tmp/cc9Kr940.s 			page 10


 302              		.loc 1 208 0
 303 005a DCE7     		b	.L21
 304              	.L30:
 305              		.align	2
 306              	.L29:
 307 005c 00040040 		.word	1073742848
 308 0060 00080040 		.word	1073743872
 309 0064 000C0040 		.word	1073744896
 310 0068 00100240 		.word	1073876992
 311              		.cfi_endproc
 312              	.LFE67:
 314              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 315              		.align	1
 316              		.global	HAL_TIM_MspPostInit
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu softvfp
 322              	HAL_TIM_MspPostInit:
 323              	.LFB68:
 209:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 210:Core/Src/tim.c **** {
 324              		.loc 1 210 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 16
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL13:
 211:Core/Src/tim.c **** 
 212:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 213:Core/Src/tim.c ****   if(timHandle->Instance==TIM3)
 329              		.loc 1 213 0
 330 0000 0268     		ldr	r2, [r0]
 331 0002 0D4B     		ldr	r3, .L38
 332 0004 9A42     		cmp	r2, r3
 333 0006 00D0     		beq	.L37
 334 0008 7047     		bx	lr
 335              	.L37:
 210:Core/Src/tim.c **** 
 336              		.loc 1 210 0
 337 000a 00B5     		push	{lr}
 338              	.LCFI11:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 14, -4
 341 000c 85B0     		sub	sp, sp, #20
 342              	.LCFI12:
 343              		.cfi_def_cfa_offset 24
 214:Core/Src/tim.c ****   {
 215:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 216:Core/Src/tim.c **** 
 217:Core/Src/tim.c ****   /* USER CODE END TIM3_MspPostInit 0 */
 218:Core/Src/tim.c ****   
 219:Core/Src/tim.c ****     /**TIM3 GPIO Configuration    
 220:Core/Src/tim.c ****     PB4     ------> TIM3_CH1 
 221:Core/Src/tim.c ****     */
 222:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4;
 344              		.loc 1 222 0
 345 000e 1023     		movs	r3, #16
ARM GAS  /tmp/cc9Kr940.s 			page 11


 346 0010 0093     		str	r3, [sp]
 223:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 347              		.loc 1 223 0
 348 0012 0223     		movs	r3, #2
 349 0014 0193     		str	r3, [sp, #4]
 224:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 350              		.loc 1 224 0
 351 0016 0393     		str	r3, [sp, #12]
 225:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 352              		.loc 1 225 0
 353 0018 6946     		mov	r1, sp
 354 001a 0848     		ldr	r0, .L38+4
 355              	.LVL14:
 356 001c FFF7FEFF 		bl	HAL_GPIO_Init
 357              	.LVL15:
 358              	.LBB5:
 226:Core/Src/tim.c **** 
 227:Core/Src/tim.c ****     __HAL_AFIO_REMAP_TIM3_PARTIAL();
 359              		.loc 1 227 0
 360 0020 074A     		ldr	r2, .L38+8
 361 0022 5368     		ldr	r3, [r2, #4]
 362              	.LVL16:
 363 0024 23F44063 		bic	r3, r3, #3072
 364              	.LVL17:
 365 0028 43F0E063 		orr	r3, r3, #117440512
 366              	.LVL18:
 367 002c 43F40063 		orr	r3, r3, #2048
 368              	.LVL19:
 369 0030 5360     		str	r3, [r2, #4]
 370              	.LBE5:
 228:Core/Src/tim.c **** 
 229:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 230:Core/Src/tim.c **** 
 231:Core/Src/tim.c ****   /* USER CODE END TIM3_MspPostInit 1 */
 232:Core/Src/tim.c ****   }
 233:Core/Src/tim.c **** 
 234:Core/Src/tim.c **** }
 371              		.loc 1 234 0
 372 0032 05B0     		add	sp, sp, #20
 373              	.LCFI13:
 374              		.cfi_def_cfa_offset 4
 375              		@ sp needed
 376 0034 5DF804FB 		ldr	pc, [sp], #4
 377              	.L39:
 378              		.align	2
 379              	.L38:
 380 0038 00040040 		.word	1073742848
 381 003c 000C0140 		.word	1073810432
 382 0040 00000140 		.word	1073807360
 383              		.cfi_endproc
 384              	.LFE68:
 386              		.section	.text.MX_TIM3_Init,"ax",%progbits
 387              		.align	1
 388              		.global	MX_TIM3_Init
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
ARM GAS  /tmp/cc9Kr940.s 			page 12


 392              		.fpu softvfp
 394              	MX_TIM3_Init:
 395              	.LFB64:
  63:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 396              		.loc 1 63 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 56
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 00B5     		push	{lr}
 401              	.LCFI14:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 14, -4
 404 0002 8FB0     		sub	sp, sp, #60
 405              	.LCFI15:
 406              		.cfi_def_cfa_offset 64
  68:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
 407              		.loc 1 68 0
 408 0004 2548     		ldr	r0, .L52
 409 0006 264B     		ldr	r3, .L52+4
 410 0008 0360     		str	r3, [r0]
  69:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 411              		.loc 1 69 0
 412 000a 0023     		movs	r3, #0
 413 000c 4360     		str	r3, [r0, #4]
  70:Core/Src/tim.c ****   htim3.Init.Period = 0;
 414              		.loc 1 70 0
 415 000e 8360     		str	r3, [r0, #8]
  71:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 416              		.loc 1 71 0
 417 0010 C360     		str	r3, [r0, #12]
  72:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 418              		.loc 1 72 0
 419 0012 0361     		str	r3, [r0, #16]
  73:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 420              		.loc 1 73 0
 421 0014 8361     		str	r3, [r0, #24]
  74:Core/Src/tim.c ****   {
 422              		.loc 1 74 0
 423 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 424              	.LVL20:
 425 001a 28BB     		cbnz	r0, .L47
 426              	.L41:
  79:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 427              		.loc 1 79 0
 428 001c 0EA9     		add	r1, sp, #56
 429 001e 4FF48053 		mov	r3, #4096
 430 0022 41F8103D 		str	r3, [r1, #-16]!
  80:Core/Src/tim.c ****   {
 431              		.loc 1 80 0
 432 0026 1D48     		ldr	r0, .L52
 433 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 434              	.LVL21:
 435 002c 08BB     		cbnz	r0, .L48
 436              	.L42:
  85:Core/Src/tim.c ****   {
 437              		.loc 1 85 0
 438 002e 1B48     		ldr	r0, .L52
ARM GAS  /tmp/cc9Kr940.s 			page 13


 439 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 440              	.LVL22:
 441 0034 10BB     		cbnz	r0, .L49
 442              	.L43:
  90:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 443              		.loc 1 90 0
 444 0036 0023     		movs	r3, #0
 445 0038 0893     		str	r3, [sp, #32]
  91:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 446              		.loc 1 91 0
 447 003a 0993     		str	r3, [sp, #36]
  92:Core/Src/tim.c ****   {
 448              		.loc 1 92 0
 449 003c 08A9     		add	r1, sp, #32
 450 003e 1748     		ldr	r0, .L52
 451 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 452              	.LVL23:
 453 0044 F8B9     		cbnz	r0, .L50
 454              	.L44:
  97:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 455              		.loc 1 97 0
 456 0046 6023     		movs	r3, #96
 457 0048 0193     		str	r3, [sp, #4]
  98:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 458              		.loc 1 98 0
 459 004a 0022     		movs	r2, #0
 460 004c 0292     		str	r2, [sp, #8]
  99:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 461              		.loc 1 99 0
 462 004e 0392     		str	r2, [sp, #12]
 100:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 463              		.loc 1 100 0
 464 0050 0592     		str	r2, [sp, #20]
 101:Core/Src/tim.c ****   {
 465              		.loc 1 101 0
 466 0052 01A9     		add	r1, sp, #4
 467 0054 1148     		ldr	r0, .L52
 468 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 469              	.LVL24:
 470 005a C8B9     		cbnz	r0, .L51
 471              	.L45:
 106:Core/Src/tim.c **** 
 472              		.loc 1 106 0
 473 005c 0F48     		ldr	r0, .L52
 474 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 475              	.LVL25:
 108:Core/Src/tim.c **** /* TIM4 init function */
 476              		.loc 1 108 0
 477 0062 0FB0     		add	sp, sp, #60
 478              	.LCFI16:
 479              		.cfi_remember_state
 480              		.cfi_def_cfa_offset 4
 481              		@ sp needed
 482 0064 5DF804FB 		ldr	pc, [sp], #4
 483              	.L47:
 484              	.LCFI17:
 485              		.cfi_restore_state
ARM GAS  /tmp/cc9Kr940.s 			page 14


  76:Core/Src/tim.c ****   }
 486              		.loc 1 76 0
 487 0068 4C21     		movs	r1, #76
 488 006a 0E48     		ldr	r0, .L52+8
 489 006c FFF7FEFF 		bl	_Error_Handler
 490              	.LVL26:
 491 0070 D4E7     		b	.L41
 492              	.L48:
  82:Core/Src/tim.c ****   }
 493              		.loc 1 82 0
 494 0072 5221     		movs	r1, #82
 495 0074 0B48     		ldr	r0, .L52+8
 496 0076 FFF7FEFF 		bl	_Error_Handler
 497              	.LVL27:
 498 007a D8E7     		b	.L42
 499              	.L49:
  87:Core/Src/tim.c ****   }
 500              		.loc 1 87 0
 501 007c 5721     		movs	r1, #87
 502 007e 0948     		ldr	r0, .L52+8
 503 0080 FFF7FEFF 		bl	_Error_Handler
 504              	.LVL28:
 505 0084 D7E7     		b	.L43
 506              	.L50:
  94:Core/Src/tim.c ****   }
 507              		.loc 1 94 0
 508 0086 5E21     		movs	r1, #94
 509 0088 0648     		ldr	r0, .L52+8
 510 008a FFF7FEFF 		bl	_Error_Handler
 511              	.LVL29:
 512 008e DAE7     		b	.L44
 513              	.L51:
 103:Core/Src/tim.c ****   }
 514              		.loc 1 103 0
 515 0090 6721     		movs	r1, #103
 516 0092 0448     		ldr	r0, .L52+8
 517 0094 FFF7FEFF 		bl	_Error_Handler
 518              	.LVL30:
 519 0098 E0E7     		b	.L45
 520              	.L53:
 521 009a 00BF     		.align	2
 522              	.L52:
 523 009c 00000000 		.word	htim3
 524 00a0 00040040 		.word	1073742848
 525 00a4 00000000 		.word	.LC0
 526              		.cfi_endproc
 527              	.LFE64:
 529              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 530              		.align	1
 531              		.global	HAL_TIM_Base_MspDeInit
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	HAL_TIM_Base_MspDeInit:
 538              	.LFB69:
 235:Core/Src/tim.c **** 
ARM GAS  /tmp/cc9Kr940.s 			page 15


 236:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 237:Core/Src/tim.c **** {
 539              		.loc 1 237 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              	.LVL31:
 544 0000 08B5     		push	{r3, lr}
 545              	.LCFI18:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 3, -8
 548              		.cfi_offset 14, -4
 238:Core/Src/tim.c **** 
 239:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM3)
 549              		.loc 1 239 0
 550 0002 0368     		ldr	r3, [r0]
 551 0004 124A     		ldr	r2, .L62
 552 0006 9342     		cmp	r3, r2
 553 0008 06D0     		beq	.L59
 240:Core/Src/tim.c ****   {
 241:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 242:Core/Src/tim.c **** 
 243:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 244:Core/Src/tim.c ****     /* Peripheral clock disable */
 245:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 247:Core/Src/tim.c **** 
 248:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 249:Core/Src/tim.c ****   }
 250:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM4)
 554              		.loc 1 250 0
 555 000a 124A     		ldr	r2, .L62+4
 556 000c 9342     		cmp	r3, r2
 557 000e 0AD0     		beq	.L60
 251:Core/Src/tim.c ****   {
 252:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 253:Core/Src/tim.c **** 
 254:Core/Src/tim.c ****   /* USER CODE END TIM4_MspDeInit 0 */
 255:Core/Src/tim.c ****     /* Peripheral clock disable */
 256:Core/Src/tim.c ****     __HAL_RCC_TIM4_CLK_DISABLE();
 257:Core/Src/tim.c **** 
 258:Core/Src/tim.c ****     /* TIM4 interrupt Deinit */
 259:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM4_IRQn);
 260:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 261:Core/Src/tim.c **** 
 262:Core/Src/tim.c ****   /* USER CODE END TIM4_MspDeInit 1 */
 263:Core/Src/tim.c ****   }
 264:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM5)
 558              		.loc 1 264 0
 559 0010 114A     		ldr	r2, .L62+8
 560 0012 9342     		cmp	r3, r2
 561 0014 11D0     		beq	.L61
 562              	.LVL32:
 563              	.L54:
 564 0016 08BD     		pop	{r3, pc}
 565              	.LVL33:
 566              	.L59:
ARM GAS  /tmp/cc9Kr940.s 			page 16


 245:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 567              		.loc 1 245 0
 568 0018 02F50332 		add	r2, r2, #134144
 569 001c D369     		ldr	r3, [r2, #28]
 570 001e 23F00203 		bic	r3, r3, #2
 571 0022 D361     		str	r3, [r2, #28]
 572 0024 08BD     		pop	{r3, pc}
 573              	.L60:
 256:Core/Src/tim.c **** 
 574              		.loc 1 256 0
 575 0026 02F50232 		add	r2, r2, #133120
 576 002a D369     		ldr	r3, [r2, #28]
 577 002c 23F00403 		bic	r3, r3, #4
 578 0030 D361     		str	r3, [r2, #28]
 259:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 579              		.loc 1 259 0
 580 0032 1E20     		movs	r0, #30
 581              	.LVL34:
 582 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 583              	.LVL35:
 584 0038 08BD     		pop	{r3, pc}
 585              	.LVL36:
 586              	.L61:
 265:Core/Src/tim.c ****   {
 266:Core/Src/tim.c ****   /* USER CODE BEGIN TIM5_MspDeInit 0 */
 267:Core/Src/tim.c **** 
 268:Core/Src/tim.c ****   /* USER CODE END TIM5_MspDeInit 0 */
 269:Core/Src/tim.c ****     /* Peripheral clock disable */
 270:Core/Src/tim.c ****     __HAL_RCC_TIM5_CLK_DISABLE();
 587              		.loc 1 270 0
 588 003a 02F50132 		add	r2, r2, #132096
 589 003e D369     		ldr	r3, [r2, #28]
 590 0040 23F00803 		bic	r3, r3, #8
 591 0044 D361     		str	r3, [r2, #28]
 271:Core/Src/tim.c **** 
 272:Core/Src/tim.c ****     /* TIM5 interrupt Deinit */
 273:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM5_IRQn);
 592              		.loc 1 273 0
 593 0046 3220     		movs	r0, #50
 594              	.LVL37:
 595 0048 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 596              	.LVL38:
 274:Core/Src/tim.c ****   /* USER CODE BEGIN TIM5_MspDeInit 1 */
 275:Core/Src/tim.c **** 
 276:Core/Src/tim.c ****   /* USER CODE END TIM5_MspDeInit 1 */
 277:Core/Src/tim.c ****   }
 278:Core/Src/tim.c **** } 
 597              		.loc 1 278 0
 598 004c E3E7     		b	.L54
 599              	.L63:
 600 004e 00BF     		.align	2
 601              	.L62:
 602 0050 00040040 		.word	1073742848
 603 0054 00080040 		.word	1073743872
 604 0058 000C0040 		.word	1073744896
 605              		.cfi_endproc
 606              	.LFE69:
ARM GAS  /tmp/cc9Kr940.s 			page 17


 608              		.comm	htim5,64,4
 609              		.comm	htim4,64,4
 610              		.comm	htim3,64,4
 611              		.section	.rodata.MX_TIM4_Init.str1.4,"aMS",%progbits,1
 612              		.align	2
 613              	.LC0:
 614 0000 436F7265 		.ascii	"Core/Src/tim.c\000"
 614      2F537263 
 614      2F74696D 
 614      2E6300
 615              		.text
 616              	.Letext0:
 617              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 618              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 619              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 620              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 621              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 622              		.file 7 "/usr/include/newlib/sys/lock.h"
 623              		.file 8 "/usr/include/newlib/sys/_types.h"
 624              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 625              		.file 10 "/usr/include/newlib/sys/reent.h"
 626              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 627              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 628              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 629              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 630              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 631              		.file 16 "Core/Inc/tim.h"
 632              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc9Kr940.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/cc9Kr940.s:16     .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/cc9Kr940.s:23     .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/cc9Kr940.s:113    .text.MX_TIM4_Init:0000000000000064 $d
                            *COM*:0000000000000040 htim4
     /tmp/cc9Kr940.s:120    .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/cc9Kr940.s:127    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/cc9Kr940.s:216    .text.MX_TIM5_Init:0000000000000064 $d
                            *COM*:0000000000000040 htim5
     /tmp/cc9Kr940.s:223    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/cc9Kr940.s:230    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/cc9Kr940.s:307    .text.HAL_TIM_Base_MspInit:000000000000005c $d
     /tmp/cc9Kr940.s:315    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/cc9Kr940.s:322    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/cc9Kr940.s:380    .text.HAL_TIM_MspPostInit:0000000000000038 $d
     /tmp/cc9Kr940.s:387    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/cc9Kr940.s:394    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/cc9Kr940.s:523    .text.MX_TIM3_Init:000000000000009c $d
                            *COM*:0000000000000040 htim3
     /tmp/cc9Kr940.s:530    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/cc9Kr940.s:537    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/cc9Kr940.s:602    .text.HAL_TIM_Base_MspDeInit:0000000000000050 $d
     /tmp/cc9Kr940.s:612    .rodata.MX_TIM4_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
_Error_Handler
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_NVIC_DisableIRQ
