ARM GAS  /tmp/ccnMMgjX.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"freertos.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.StartDefaultTask,"ax",%progbits
  16              		.align	1
  17              		.global	StartDefaultTask
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	StartDefaultTask:
  24              	.LFB6:
  25              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /**
   2:Core/Src/freertos.c ****   ******************************************************************************
   3:Core/Src/freertos.c ****   * File Name          : freertos.c
   4:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   5:Core/Src/freertos.c ****   ******************************************************************************
   6:Core/Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Core/Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Core/Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Core/Src/freertos.c ****   * inserted by the user or by software development tools
  10:Core/Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Core/Src/freertos.c ****   * All rights reserved.
  14:Core/Src/freertos.c ****   *
  15:Core/Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Core/Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Core/Src/freertos.c ****   *
  18:Core/Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Core/Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Core/Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Core/Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Core/Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Core/Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Core/Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Core/Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Core/Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Core/Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Core/Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Core/Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Core/Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Core/Src/freertos.c ****   *    this license. 
  32:Core/Src/freertos.c ****   *
  33:Core/Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
ARM GAS  /tmp/ccnMMgjX.s 			page 2


  34:Core/Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Core/Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Core/Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Core/Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Core/Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Core/Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Core/Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Core/Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Core/Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Core/Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Core/Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/freertos.c ****   *
  46:Core/Src/freertos.c ****   ******************************************************************************
  47:Core/Src/freertos.c ****   */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Core/Src/freertos.c **** #include "FreeRTOS.h"
  51:Core/Src/freertos.c **** #include "task.h"
  52:Core/Src/freertos.c **** #include "cmsis_os.h"
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */     
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END Includes */
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  59:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** /* USER CODE END Variables */
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  66:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  73:Core/Src/freertos.c **** 
  74:Core/Src/freertos.c **** /* Hook prototypes */
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* Init FreeRTOS */
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  79:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/freertos.c ****        
  81:Core/Src/freertos.c ****   /* USER CODE END Init */
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  84:Core/Src/freertos.c ****   /* add mutexes, ... */
  85:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  86:Core/Src/freertos.c **** 
  87:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  88:Core/Src/freertos.c ****   /* add semaphores, ... */
  89:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  90:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccnMMgjX.s 			page 3


  91:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  92:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  93:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c ****   /* Create the thread(s) */
  96:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
  97:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
  98:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 101:Core/Src/freertos.c ****   /* add threads, ... */
 102:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 105:Core/Src/freertos.c ****   /* add queues, ... */
 106:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 107:Core/Src/freertos.c **** }
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c **** /* StartDefaultTask function */
 110:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 111:Core/Src/freertos.c **** {
  26              		.loc 1 111 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
  38              	.L2:
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 114:Core/Src/freertos.c ****   /* Infinite loop */
 115:Core/Src/freertos.c ****   for(;;)
 116:Core/Src/freertos.c ****   {
 117:Core/Src/freertos.c ****     osDelay(1);
  39              		.loc 1 117 0 discriminator 1
  40 0002 0120     		movs	r0, #1
  41 0004 FFF7FEFF 		bl	osDelay
  42              	.LVL2:
  43 0008 FBE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE6:
  47              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  48              		.align	1
  49              		.global	MX_FREERTOS_Init
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu softvfp
  55              	MX_FREERTOS_Init:
  56              	.LFB5:
  78:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccnMMgjX.s 			page 4


  57              		.loc 1 78 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 24
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 30B5     		push	{r4, r5, lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 12
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0002 87B0     		sub	sp, sp, #28
  68              	.LCFI2:
  69              		.cfi_def_cfa_offset 40
  97:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  70              		.loc 1 97 0
  71 0004 01AC     		add	r4, sp, #4
  72 0006 064D     		ldr	r5, .L6
  73 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  74 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  75 000c 2B68     		ldr	r3, [r5]
  76 000e 2360     		str	r3, [r4]
  98:Core/Src/freertos.c **** 
  77              		.loc 1 98 0
  78 0010 0021     		movs	r1, #0
  79 0012 01A8     		add	r0, sp, #4
  80 0014 FFF7FEFF 		bl	osThreadCreate
  81              	.LVL3:
  82 0018 024B     		ldr	r3, .L6+4
  83 001a 1860     		str	r0, [r3]
 107:Core/Src/freertos.c **** 
  84              		.loc 1 107 0
  85 001c 07B0     		add	sp, sp, #28
  86              	.LCFI3:
  87              		.cfi_def_cfa_offset 12
  88              		@ sp needed
  89 001e 30BD     		pop	{r4, r5, pc}
  90              	.L7:
  91              		.align	2
  92              	.L6:
  93 0020 00000000 		.word	.LANCHOR0
  94 0024 00000000 		.word	defaultTaskHandle
  95              		.cfi_endproc
  96              	.LFE5:
  98              		.comm	defaultTaskHandle,4,4
  99              		.section	.rodata
 100              		.align	2
 101              		.set	.LANCHOR0,. + 0
 102              	.LC2:
 103 0000 00000000 		.word	.LC0
 104 0004 00000000 		.word	StartDefaultTask
 105 0008 0000     		.short	0
 106 000a 0000     		.space	2
 107 000c 00000000 		.word	0
 108 0010 80000000 		.word	128
 109              		.section	.rodata.str1.4,"aMS",%progbits,1
 110              		.align	2
 111              	.LC0:
ARM GAS  /tmp/ccnMMgjX.s 			page 5


 112 0000 64656661 		.ascii	"defaultTask\000"
 112      756C7454 
 112      61736B00 
 113              		.text
 114              	.Letext0:
 115              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 116              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 117              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 118              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 119              		.file 6 "Core/Inc/FreeRTOSConfig.h"
ARM GAS  /tmp/ccnMMgjX.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccnMMgjX.s:16     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccnMMgjX.s:23     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccnMMgjX.s:48     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccnMMgjX.s:55     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccnMMgjX.s:93     .text.MX_FREERTOS_Init:0000000000000020 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccnMMgjX.s:100    .rodata:0000000000000000 $d
     /tmp/ccnMMgjX.s:110    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
osDelay
osThreadCreate
