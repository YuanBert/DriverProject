ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB71:
  25              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /**
   2:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   3:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   4:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   6:Core/Src/stm32f1xx_it.c ****   *
   7:Core/Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Core/Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Core/Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Core/Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Core/Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Core/Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Core/Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Core/Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Core/Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Core/Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  19:Core/Src/stm32f1xx_it.c ****   *
  20:Core/Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Core/Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Core/Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Core/Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Core/Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Core/Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Core/Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Core/Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Core/Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Core/Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Core/Src/stm32f1xx_it.c ****   *
  31:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  32:Core/Src/stm32f1xx_it.c ****   */
  33:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 2


  34:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_hal.h"
  35:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx.h"
  36:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  37:Core/Src/stm32f1xx_it.c **** #include "cmsis_os.h"
  38:Core/Src/stm32f1xx_it.c **** 
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  45:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim4;
  46:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim5;
  47:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  48:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  49:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  50:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  51:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart2;
  52:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart3;
  53:Core/Src/stm32f1xx_it.c **** 
  54:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  57:Core/Src/stm32f1xx_it.c **** /*            Cortex-M3 Processor Interruption and Exception Handlers         */ 
  58:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /**
  61:Core/Src/stm32f1xx_it.c **** * @brief This function handles Non maskable interrupt.
  62:Core/Src/stm32f1xx_it.c **** */
  63:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  64:Core/Src/stm32f1xx_it.c **** {
  26              		.loc 1 64 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  65:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  68:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  69:Core/Src/stm32f1xx_it.c **** 
  70:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  71:Core/Src/stm32f1xx_it.c **** }
  31              		.loc 1 71 0
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE71:
  36              		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	1
  38              		.global	HardFault_Handler
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HardFault_Handler:
  45              	.LFB72:
  72:Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 3


  73:Core/Src/stm32f1xx_it.c **** /**
  74:Core/Src/stm32f1xx_it.c **** * @brief This function handles Hard fault interrupt.
  75:Core/Src/stm32f1xx_it.c **** */
  76:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  77:Core/Src/stm32f1xx_it.c **** {
  46              		.loc 1 77 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE72:
  57              		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.global	MemManage_Handler
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	MemManage_Handler:
  66              	.LFB73:
  78:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  79:Core/Src/stm32f1xx_it.c **** 
  80:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  81:Core/Src/stm32f1xx_it.c ****   while (1)
  82:Core/Src/stm32f1xx_it.c ****   {
  83:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  84:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  85:Core/Src/stm32f1xx_it.c ****   }
  86:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  87:Core/Src/stm32f1xx_it.c **** 
  88:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  89:Core/Src/stm32f1xx_it.c **** }
  90:Core/Src/stm32f1xx_it.c **** 
  91:Core/Src/stm32f1xx_it.c **** /**
  92:Core/Src/stm32f1xx_it.c **** * @brief This function handles Memory management fault.
  93:Core/Src/stm32f1xx_it.c **** */
  94:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  95:Core/Src/stm32f1xx_it.c **** {
  67              		.loc 1 95 0
  68              		.cfi_startproc
  69              		@ Volatile: function does not return.
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.L5:
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE73:
  78              		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	BusFault_Handler
  81              		.syntax unified
  82              		.thumb
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 4


  83              		.thumb_func
  84              		.fpu softvfp
  86              	BusFault_Handler:
  87              	.LFB74:
  96:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c **** 
  98:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  99:Core/Src/stm32f1xx_it.c ****   while (1)
 100:Core/Src/stm32f1xx_it.c ****   {
 101:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 102:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c ****   }
 104:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 105:Core/Src/stm32f1xx_it.c **** 
 106:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 107:Core/Src/stm32f1xx_it.c **** }
 108:Core/Src/stm32f1xx_it.c **** 
 109:Core/Src/stm32f1xx_it.c **** /**
 110:Core/Src/stm32f1xx_it.c **** * @brief This function handles Prefetch fault, memory access fault.
 111:Core/Src/stm32f1xx_it.c **** */
 112:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 113:Core/Src/stm32f1xx_it.c **** {
  88              		.loc 1 113 0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.L7:
  95 0000 FEE7     		b	.L7
  96              		.cfi_endproc
  97              	.LFE74:
  99              		.section	.text.UsageFault_Handler,"ax",%progbits
 100              		.align	1
 101              		.global	UsageFault_Handler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu softvfp
 107              	UsageFault_Handler:
 108              	.LFB75:
 114:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 115:Core/Src/stm32f1xx_it.c **** 
 116:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 117:Core/Src/stm32f1xx_it.c ****   while (1)
 118:Core/Src/stm32f1xx_it.c ****   {
 119:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 120:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****   }
 122:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 123:Core/Src/stm32f1xx_it.c **** 
 124:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 125:Core/Src/stm32f1xx_it.c **** }
 126:Core/Src/stm32f1xx_it.c **** 
 127:Core/Src/stm32f1xx_it.c **** /**
 128:Core/Src/stm32f1xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 129:Core/Src/stm32f1xx_it.c **** */
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 5


 130:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 131:Core/Src/stm32f1xx_it.c **** {
 109              		.loc 1 131 0
 110              		.cfi_startproc
 111              		@ Volatile: function does not return.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.L9:
 116 0000 FEE7     		b	.L9
 117              		.cfi_endproc
 118              	.LFE75:
 120              		.section	.text.DebugMon_Handler,"ax",%progbits
 121              		.align	1
 122              		.global	DebugMon_Handler
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	DebugMon_Handler:
 129              	.LFB76:
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c **** 
 134:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32f1xx_it.c ****   while (1)
 136:Core/Src/stm32f1xx_it.c ****   {
 137:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****   }
 140:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 141:Core/Src/stm32f1xx_it.c **** 
 142:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 143:Core/Src/stm32f1xx_it.c **** }
 144:Core/Src/stm32f1xx_it.c **** 
 145:Core/Src/stm32f1xx_it.c **** /**
 146:Core/Src/stm32f1xx_it.c **** * @brief This function handles Debug monitor.
 147:Core/Src/stm32f1xx_it.c **** */
 148:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f1xx_it.c **** {
 130              		.loc 1 149 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f1xx_it.c **** }
 135              		.loc 1 156 0
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE76:
 140              		.section	.text.SysTick_Handler,"ax",%progbits
 141              		.align	1
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 6


 142              		.global	SysTick_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	SysTick_Handler:
 149              	.LFB77:
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c **** /**
 159:Core/Src/stm32f1xx_it.c **** * @brief This function handles System tick timer.
 160:Core/Src/stm32f1xx_it.c **** */
 161:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 162:Core/Src/stm32f1xx_it.c **** {
 150              		.loc 1 162 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154 0000 08B5     		push	{r3, lr}
 155              	.LCFI0:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 3, -8
 158              		.cfi_offset 14, -4
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 166:Core/Src/stm32f1xx_it.c ****   osSystickHandler();
 159              		.loc 1 166 0
 160 0002 FFF7FEFF 		bl	osSystickHandler
 161              	.LVL0:
 167:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 168:Core/Src/stm32f1xx_it.c **** 
 169:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 170:Core/Src/stm32f1xx_it.c **** }
 162              		.loc 1 170 0
 163 0006 08BD     		pop	{r3, pc}
 164              		.cfi_endproc
 165              	.LFE77:
 167              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 168              		.align	1
 169              		.global	EXTI4_IRQHandler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu softvfp
 175              	EXTI4_IRQHandler:
 176              	.LFB78:
 171:Core/Src/stm32f1xx_it.c **** 
 172:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 173:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 174:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 175:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 176:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 177:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c **** /**
 180:Core/Src/stm32f1xx_it.c **** * @brief This function handles EXTI line4 interrupt.
 181:Core/Src/stm32f1xx_it.c **** */
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 7


 182:Core/Src/stm32f1xx_it.c **** void EXTI4_IRQHandler(void)
 183:Core/Src/stm32f1xx_it.c **** {
 177              		.loc 1 183 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 08B5     		push	{r3, lr}
 182              	.LCFI1:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 3, -8
 185              		.cfi_offset 14, -4
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c **** 
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 186              		.loc 1 187 0
 187 0002 1020     		movs	r0, #16
 188 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 189              	.LVL1:
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 189:Core/Src/stm32f1xx_it.c **** 
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** }
 190              		.loc 1 191 0
 191 0008 08BD     		pop	{r3, pc}
 192              		.cfi_endproc
 193              	.LFE78:
 195              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 196              		.align	1
 197              		.global	DMA1_Channel1_IRQHandler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	DMA1_Channel1_IRQHandler:
 204              	.LFB79:
 192:Core/Src/stm32f1xx_it.c **** 
 193:Core/Src/stm32f1xx_it.c **** /**
 194:Core/Src/stm32f1xx_it.c **** * @brief This function handles DMA1 channel1 global interrupt.
 195:Core/Src/stm32f1xx_it.c **** */
 196:Core/Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 197:Core/Src/stm32f1xx_it.c **** {
 205              		.loc 1 197 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 198:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 199:Core/Src/stm32f1xx_it.c **** 
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 201:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 214              		.loc 1 201 0
 215 0002 0248     		ldr	r0, .L17
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 8


 216 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 217              	.LVL2:
 202:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 203:Core/Src/stm32f1xx_it.c **** 
 204:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 205:Core/Src/stm32f1xx_it.c **** }
 218              		.loc 1 205 0
 219 0008 08BD     		pop	{r3, pc}
 220              	.L18:
 221 000a 00BF     		.align	2
 222              	.L17:
 223 000c 00000000 		.word	hdma_adc1
 224              		.cfi_endproc
 225              	.LFE79:
 227              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 228              		.align	1
 229              		.global	DMA1_Channel3_IRQHandler
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	DMA1_Channel3_IRQHandler:
 236              	.LFB80:
 206:Core/Src/stm32f1xx_it.c **** 
 207:Core/Src/stm32f1xx_it.c **** /**
 208:Core/Src/stm32f1xx_it.c **** * @brief This function handles DMA1 channel3 global interrupt.
 209:Core/Src/stm32f1xx_it.c **** */
 210:Core/Src/stm32f1xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 211:Core/Src/stm32f1xx_it.c **** {
 237              		.loc 1 211 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 08B5     		push	{r3, lr}
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 3, -8
 245              		.cfi_offset 14, -4
 212:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 213:Core/Src/stm32f1xx_it.c **** 
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 215:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 246              		.loc 1 215 0
 247 0002 0248     		ldr	r0, .L21
 248 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 249              	.LVL3:
 216:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 217:Core/Src/stm32f1xx_it.c **** 
 218:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 219:Core/Src/stm32f1xx_it.c **** }
 250              		.loc 1 219 0
 251 0008 08BD     		pop	{r3, pc}
 252              	.L22:
 253 000a 00BF     		.align	2
 254              	.L21:
 255 000c 00000000 		.word	hdma_usart3_rx
 256              		.cfi_endproc
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 9


 257              	.LFE80:
 259              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 260              		.align	1
 261              		.global	DMA1_Channel5_IRQHandler
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu softvfp
 267              	DMA1_Channel5_IRQHandler:
 268              	.LFB81:
 220:Core/Src/stm32f1xx_it.c **** 
 221:Core/Src/stm32f1xx_it.c **** /**
 222:Core/Src/stm32f1xx_it.c **** * @brief This function handles DMA1 channel5 global interrupt.
 223:Core/Src/stm32f1xx_it.c **** */
 224:Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 225:Core/Src/stm32f1xx_it.c **** {
 269              		.loc 1 225 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 08B5     		push	{r3, lr}
 274              	.LCFI4:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
 226:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 227:Core/Src/stm32f1xx_it.c **** 
 228:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 229:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 278              		.loc 1 229 0
 279 0002 0248     		ldr	r0, .L25
 280 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 281              	.LVL4:
 230:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 231:Core/Src/stm32f1xx_it.c **** 
 232:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 233:Core/Src/stm32f1xx_it.c **** }
 282              		.loc 1 233 0
 283 0008 08BD     		pop	{r3, pc}
 284              	.L26:
 285 000a 00BF     		.align	2
 286              	.L25:
 287 000c 00000000 		.word	hdma_usart1_rx
 288              		.cfi_endproc
 289              	.LFE81:
 291              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 292              		.align	1
 293              		.global	DMA1_Channel6_IRQHandler
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu softvfp
 299              	DMA1_Channel6_IRQHandler:
 300              	.LFB82:
 234:Core/Src/stm32f1xx_it.c **** 
 235:Core/Src/stm32f1xx_it.c **** /**
 236:Core/Src/stm32f1xx_it.c **** * @brief This function handles DMA1 channel6 global interrupt.
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 10


 237:Core/Src/stm32f1xx_it.c **** */
 238:Core/Src/stm32f1xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 239:Core/Src/stm32f1xx_it.c **** {
 301              		.loc 1 239 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 08B5     		push	{r3, lr}
 306              	.LCFI5:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 240:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */
 241:Core/Src/stm32f1xx_it.c **** 
 242:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 0 */
 243:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 310              		.loc 1 243 0
 311 0002 0248     		ldr	r0, .L29
 312 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 313              	.LVL5:
 244:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
 245:Core/Src/stm32f1xx_it.c **** 
 246:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 1 */
 247:Core/Src/stm32f1xx_it.c **** }
 314              		.loc 1 247 0
 315 0008 08BD     		pop	{r3, pc}
 316              	.L30:
 317 000a 00BF     		.align	2
 318              	.L29:
 319 000c 00000000 		.word	hdma_usart2_rx
 320              		.cfi_endproc
 321              	.LFE82:
 323              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 324              		.align	1
 325              		.global	TIM1_UP_IRQHandler
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	TIM1_UP_IRQHandler:
 332              	.LFB83:
 248:Core/Src/stm32f1xx_it.c **** 
 249:Core/Src/stm32f1xx_it.c **** /**
 250:Core/Src/stm32f1xx_it.c **** * @brief This function handles TIM1 update interrupt.
 251:Core/Src/stm32f1xx_it.c **** */
 252:Core/Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 253:Core/Src/stm32f1xx_it.c **** {
 333              		.loc 1 253 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              	.LCFI6:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
 254:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 11


 255:Core/Src/stm32f1xx_it.c **** 
 256:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 257:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 342              		.loc 1 257 0
 343 0002 0248     		ldr	r0, .L33
 344 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 345              	.LVL6:
 258:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 259:Core/Src/stm32f1xx_it.c **** 
 260:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 261:Core/Src/stm32f1xx_it.c **** }
 346              		.loc 1 261 0
 347 0008 08BD     		pop	{r3, pc}
 348              	.L34:
 349 000a 00BF     		.align	2
 350              	.L33:
 351 000c 00000000 		.word	htim1
 352              		.cfi_endproc
 353              	.LFE83:
 355              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 356              		.align	1
 357              		.global	TIM4_IRQHandler
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	TIM4_IRQHandler:
 364              	.LFB84:
 262:Core/Src/stm32f1xx_it.c **** 
 263:Core/Src/stm32f1xx_it.c **** /**
 264:Core/Src/stm32f1xx_it.c **** * @brief This function handles TIM4 global interrupt.
 265:Core/Src/stm32f1xx_it.c **** */
 266:Core/Src/stm32f1xx_it.c **** void TIM4_IRQHandler(void)
 267:Core/Src/stm32f1xx_it.c **** {
 365              		.loc 1 267 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 08B5     		push	{r3, lr}
 370              	.LCFI7:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 3, -8
 373              		.cfi_offset 14, -4
 268:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 269:Core/Src/stm32f1xx_it.c **** 
 270:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 271:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 374              		.loc 1 271 0
 375 0002 0248     		ldr	r0, .L37
 376 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 377              	.LVL7:
 272:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 273:Core/Src/stm32f1xx_it.c **** 
 274:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 275:Core/Src/stm32f1xx_it.c **** }
 378              		.loc 1 275 0
 379 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 12


 380              	.L38:
 381 000a 00BF     		.align	2
 382              	.L37:
 383 000c 00000000 		.word	htim4
 384              		.cfi_endproc
 385              	.LFE84:
 387              		.section	.text.USART1_IRQHandler,"ax",%progbits
 388              		.align	1
 389              		.global	USART1_IRQHandler
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu softvfp
 395              	USART1_IRQHandler:
 396              	.LFB85:
 276:Core/Src/stm32f1xx_it.c **** 
 277:Core/Src/stm32f1xx_it.c **** /**
 278:Core/Src/stm32f1xx_it.c **** * @brief This function handles USART1 global interrupt.
 279:Core/Src/stm32f1xx_it.c **** */
 280:Core/Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 281:Core/Src/stm32f1xx_it.c **** {
 397              		.loc 1 281 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401 0000 08B5     		push	{r3, lr}
 402              	.LCFI8:
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 3, -8
 405              		.cfi_offset 14, -4
 282:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 283:Core/Src/stm32f1xx_it.c **** 
 284:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 285:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 406              		.loc 1 285 0
 407 0002 0248     		ldr	r0, .L41
 408 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 409              	.LVL8:
 286:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 287:Core/Src/stm32f1xx_it.c **** 
 288:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 289:Core/Src/stm32f1xx_it.c **** }
 410              		.loc 1 289 0
 411 0008 08BD     		pop	{r3, pc}
 412              	.L42:
 413 000a 00BF     		.align	2
 414              	.L41:
 415 000c 00000000 		.word	huart1
 416              		.cfi_endproc
 417              	.LFE85:
 419              		.section	.text.USART2_IRQHandler,"ax",%progbits
 420              		.align	1
 421              		.global	USART2_IRQHandler
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 13


 427              	USART2_IRQHandler:
 428              	.LFB86:
 290:Core/Src/stm32f1xx_it.c **** 
 291:Core/Src/stm32f1xx_it.c **** /**
 292:Core/Src/stm32f1xx_it.c **** * @brief This function handles USART2 global interrupt.
 293:Core/Src/stm32f1xx_it.c **** */
 294:Core/Src/stm32f1xx_it.c **** void USART2_IRQHandler(void)
 295:Core/Src/stm32f1xx_it.c **** {
 429              		.loc 1 295 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 08B5     		push	{r3, lr}
 434              	.LCFI9:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 3, -8
 437              		.cfi_offset 14, -4
 296:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 297:Core/Src/stm32f1xx_it.c **** 
 298:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 299:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 438              		.loc 1 299 0
 439 0002 0248     		ldr	r0, .L45
 440 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 441              	.LVL9:
 300:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 301:Core/Src/stm32f1xx_it.c **** 
 302:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 303:Core/Src/stm32f1xx_it.c **** }
 442              		.loc 1 303 0
 443 0008 08BD     		pop	{r3, pc}
 444              	.L46:
 445 000a 00BF     		.align	2
 446              	.L45:
 447 000c 00000000 		.word	huart2
 448              		.cfi_endproc
 449              	.LFE86:
 451              		.section	.text.USART3_IRQHandler,"ax",%progbits
 452              		.align	1
 453              		.global	USART3_IRQHandler
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu softvfp
 459              	USART3_IRQHandler:
 460              	.LFB87:
 304:Core/Src/stm32f1xx_it.c **** 
 305:Core/Src/stm32f1xx_it.c **** /**
 306:Core/Src/stm32f1xx_it.c **** * @brief This function handles USART3 global interrupt.
 307:Core/Src/stm32f1xx_it.c **** */
 308:Core/Src/stm32f1xx_it.c **** void USART3_IRQHandler(void)
 309:Core/Src/stm32f1xx_it.c **** {
 461              		.loc 1 309 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 14


 466              	.LCFI10:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 3, -8
 469              		.cfi_offset 14, -4
 310:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 311:Core/Src/stm32f1xx_it.c **** 
 312:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 313:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 470              		.loc 1 313 0
 471 0002 0248     		ldr	r0, .L49
 472 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 473              	.LVL10:
 314:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 315:Core/Src/stm32f1xx_it.c **** 
 316:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 317:Core/Src/stm32f1xx_it.c **** }
 474              		.loc 1 317 0
 475 0008 08BD     		pop	{r3, pc}
 476              	.L50:
 477 000a 00BF     		.align	2
 478              	.L49:
 479 000c 00000000 		.word	huart3
 480              		.cfi_endproc
 481              	.LFE87:
 483              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 484              		.align	1
 485              		.global	TIM5_IRQHandler
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	TIM5_IRQHandler:
 492              	.LFB88:
 318:Core/Src/stm32f1xx_it.c **** 
 319:Core/Src/stm32f1xx_it.c **** /**
 320:Core/Src/stm32f1xx_it.c **** * @brief This function handles TIM5 global interrupt.
 321:Core/Src/stm32f1xx_it.c **** */
 322:Core/Src/stm32f1xx_it.c **** void TIM5_IRQHandler(void)
 323:Core/Src/stm32f1xx_it.c **** {
 493              		.loc 1 323 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 08B5     		push	{r3, lr}
 498              	.LCFI11:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 3, -8
 501              		.cfi_offset 14, -4
 324:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 325:Core/Src/stm32f1xx_it.c **** 
 326:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 327:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 502              		.loc 1 327 0
 503 0002 0248     		ldr	r0, .L53
 504 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 505              	.LVL11:
 328:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 15


 329:Core/Src/stm32f1xx_it.c **** 
 330:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 331:Core/Src/stm32f1xx_it.c **** }
 506              		.loc 1 331 0
 507 0008 08BD     		pop	{r3, pc}
 508              	.L54:
 509 000a 00BF     		.align	2
 510              	.L53:
 511 000c 00000000 		.word	htim5
 512              		.cfi_endproc
 513              	.LFE88:
 515              		.text
 516              	.Letext0:
 517              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 518              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 519              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 520              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 521              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 522              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 523              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 524              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 525              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 526              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 527              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 528              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 529              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 530              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 531              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:16     .text.NMI_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:23     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:37     .text.HardFault_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:44     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:58     .text.MemManage_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:65     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:79     .text.BusFault_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:86     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:100    .text.UsageFault_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:107    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:121    .text.DebugMon_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:128    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:141    .text.SysTick_Handler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:148    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:168    .text.EXTI4_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:175    .text.EXTI4_IRQHandler:00000000 EXTI4_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:196    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:203    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:223    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:228    .text.DMA1_Channel3_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:235    .text.DMA1_Channel3_IRQHandler:00000000 DMA1_Channel3_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:255    .text.DMA1_Channel3_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:260    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:267    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:287    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:292    .text.DMA1_Channel6_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:299    .text.DMA1_Channel6_IRQHandler:00000000 DMA1_Channel6_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:319    .text.DMA1_Channel6_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:324    .text.TIM1_UP_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:331    .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:351    .text.TIM1_UP_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:356    .text.TIM4_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:363    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:383    .text.TIM4_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:388    .text.USART1_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:395    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:415    .text.USART1_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:420    .text.USART2_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:427    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:447    .text.USART2_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:452    .text.USART3_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:459    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:479    .text.USART3_IRQHandler:0000000c $d
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:484    .text.TIM5_IRQHandler:00000000 $t
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:491    .text.TIM5_IRQHandler:00000000 TIM5_IRQHandler
C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s:511    .text.TIM5_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
osSystickHandler
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_adc1
hdma_usart3_rx
hdma_usart1_rx
hdma_usart2_rx
ARM GAS  C:\Users\bertz\AppData\Local\Temp\ccLgWj2l.s 			page 17


HAL_TIM_IRQHandler
htim1
htim4
HAL_UART_IRQHandler
huart1
huart2
huart3
htim5
